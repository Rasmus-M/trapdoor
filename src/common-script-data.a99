* Script Data Berk Turning to Face Left
_34977:
       byte 8,0                                  ; Set Must Process Current Script Data Flag
       byte 19,0                                 ; Move carried entity to Berk's left as he faces left
       byte _56248&>00ff,(_56248&>ff00)/256      ; #R56248 (Berk, stepping left, left foot out, arm and eye animated)
       byte _56257&>00ff,(_56257&>ff00)/256      ; #R56257 (Berk, stepping left, left foot out and forward, arm and eye animated)
* At this point, Berk has made the turn (i.e. already moved his feet)
_34985:
       byte 13,0                                 ; Set Berk's Facing Left Flag, and reset his Facing Into Screen and Facing Right flags
       byte 19,0                                 ; Move carried entity to Berk's left as he faces left
       byte 9,0                                  ; Reset Must Process Current Script Data Flag
       byte _56266&>00ff,(_56266&>ff00)/256      ; #R56266 (Berk, facing left, arm and eye animated)
       byte 1,0,_34985&>00ff,(_34985&>ff00)/256  ; Jump back to #R34985

* Script Data Berk Turning to Face Right
_34997:
       byte 8,0                                  ; Set Must Process Current Script Data Flag
       byte 20,0                                 ; Move carried entity to Berk's right as he faces right
       byte _55710&>00ff,(_55710&>ff00)/256      ; #R55710 (Berk, stepping right, right foot out, arm and eye animated)
       byte _55698&>00ff,(_55698&>ff00)/256      ; #R55698 (Berk, stepping right, right foot out and forward, arm and eye animated)
* At this point, Berk has made the turn (i.e. already moved his feet)
_35005:
       byte 14,0                                 ; Set Berk's Facing Right Flag, and reset his Facing Into Screen and Facing Left flags
       byte 20,0                                 ; Move carried entity to Berk's right as he faces right
       byte 9,0                                  ; Reset Must Process Current Script Data Flag
       byte _55722&>00ff,(_55722&>ff00)/256      ; #R55722 (Berk, facing right, arm and eye animated)
       byte 1,0,_35005&>00ff,(_35005&>ff00)/256  ; Jump back to #R35005

* Script Data Berk Interacting with a Door Behind Him
_35017:
       byte 8,0                                  ; Set Must Process Current Script Data Flag
       byte 6,0                                  ; Set Berk's Facing Into Screen Flag, and reset his Facing Left and Facing Right flags
       byte 10,0                                 ; Reset Berk's Walking Left and Walking Right flags
       byte 22,0                                 ; Move carried entity behind Berk as he faces into screen
       byte _57428&>00ff,(_57428&>ff00)/256      ; #R57428 (Berk facing into screen, holding something)
       byte _57428&>00ff,(_57428&>ff00)/256      ; #R57428 (Berk facing into screen, holding something)
       byte 59,0                                 ; Have Berk interact appropriately with a door behind him
       byte 57,0                                 ; Cycle attributes (full-screen), clear display buffers and paint red areas outside current
                                                 ; room
       byte 23,0,5,0                             ; Start loop (1) for 5 iterations
       byte _57338&>00ff,(_57338&>ff00)/256      ; #R57338 (Berk facing into screen, arms out to the sides)
       byte 24,0                                 ; End loop (1)
       byte 1,0,_35113&>00ff,(_35113&>ff00)/256  ; Jump to #R35113 (Berk facing into screen, ready to respond to control input)

* Script Data Berk Interacting with a Door in Front of Him
_35045:
       byte 8,0                                  ; Set Must Process Current Script Data Flag
       byte 7,0                                  ; Reset Berk's Facing Into Screen, Facing Left and Facing Right flags
       byte 10,0                                 ; Reset Berk's Walking Left and Walking Right flags
       byte 21,0                                 ; Move carried entity in front of Berk as he faces out of screen
       byte _57058&>00ff,(_57058&>ff00)/256      ; #R57058 (Berk, facing out of screen, holding something, animated)
       byte _57058&>00ff,(_57058&>ff00)/256      ; #R57058 (Berk, facing out of screen, holding something, animated)
       byte 58,0                                 ; Have Berk interact appropriately with a door in front of him
       byte 57,0                                 ; Cycle attributes (full-screen), clear display buffers and paint red areas outside current
                                                 ; room
       byte 23,0,5,0                             ; Start loop (1) for 5 iterations
       byte _56731&>00ff,(_56731&>ff00)/256      ; #R56731 (Berk, facing out of screen, arms outstretched, animated)
       byte 24,0                                 ; End loop (1)
       byte 1,0,_35081&>00ff,(_35081&>ff00)/256  ; Jump to #R35081 (Berk facing out of screen, ready to respond to control input)

* Script Data Berk Turning (Facing into Screen to Facing Out of Screen)
_35073:
       byte 8,0                                  ; Set Must Process Current Script Data Flag
       byte 20,0                                 ; Move carried entity to Berk's right as he faces right
       byte _55698&>00ff,(_55698&>ff00)/256      ; #R55698 (Berk, stepping right, right foot out and forward, arm and eye animated)
       byte _55710&>00ff,(_55710&>ff00)/256      ; #R55710 (Berk, stepping right, right foot out, arm and eye animated)
* Berk facing out of screen, ready to respond to control input
_35081:
       byte 10,0                                 ; Reset Berk's Walking Left and Walking Right flags
       byte 9,0                                  ; Reset Must Process Current Script Data Flag
       byte 7,0                                  ; Reset Berk's Facing Into Screen, Facing Left and Facing Right flags
       byte 15,0,_35097&>00ff,(_35097&>ff00)/256 ; If Berk is carrying something then jump to #R35097 (Berk facing out of screen, holding
                                                 ; something)
* Berk holding nothing
_35091:
       byte _56804&>00ff,(_56804&>ff00)/256      ; #R56804 (Berk, facing out of screen, arms down at sides, animated)
       byte 1,0,_35091&>00ff,(_35091&>ff00)/256  ; Jump to #R35091
* Berk holding something
_35097:
       byte 21,0                                 ; Move carried entity in front of Berk as he faces out of screen
       byte _57058&>00ff,(_57058&>ff00)/256      ; #R57058 (Berk, facing out of screen, holding something, animated)
       byte 1,0,_35097&>00ff,(_35097&>ff00)/256  ; Jump to #R35097

* Script Data Berk Turning (Facing Out of Screen to Facing into Screen)
_35105:
       byte 8,0                                  ; Set Must Process Current Script Data Flag
       byte 19,0                                 ; Move carried entity to Berk's left as he faces left
       byte _56248&>00ff,(_56248&>ff00)/256      ; #R56248 (Berk, stepping left, left foot out, arm and eye animated)
       byte _56257&>00ff,(_56257&>ff00)/256      ; #R56257 (Berk, stepping left, left foot out and forward, arm and eye animated)
* Berk facing into screen, ready to respond to control input
_35113:
       byte 9,0                                  ; Reset Must Process Current Script Data Flag
       byte 6,0                                  ; Set Berk's Facing Into Screen Flag, and reset his Facing Left and Facing Right flags
       byte 10,0                                 ; Reset Berk's Walking Left and Walking Right flags
       byte 15,0,_35173&>00ff,(_35173&>ff00)/256 ; If Berk is carrying something then jump to #R35173 (Berk facing into screen, holding
                                                 ; something)
* Berk holding nothing
       byte 23,0,8,0                             ; Start loop (1) for 8 iterations
       byte _57353&>00ff,(_57353&>ff00)/256      ; #R57353 (Berk, facing into screen, arms down)
       byte 24,0                                 ; End loop (1)
       byte 1,0,_35073&>00ff,(_35073&>ff00)/256  ; Jump to #R35073 (Berk turning from facing into screen to facing out of screen)

* Script Data Berk Picking Up an Entity on Floor Behind Him
_35135:
       byte 10,0                                 ; Reset Berk's Walking Left and Walking Right flags
       byte 8,0                                  ; Set Must Process Current Script Data Flag
       byte _57338&>00ff,(_57338&>ff00)/256      ; #R57338 (Berk facing into screen, arms out to the sides)
       byte _58209&>00ff,(_58209&>ff00)/256      ; #R58209 (Berk facing into screen, bending down)
       byte 16,0                                 ; Have Berk hold an entity, and position it appropriately between his hands
       byte 1,0,_35173&>00ff,(_35173&>ff00)/256  ; Jump to #R35173 (Berk facing into screen, holding something)

* Script Data Berk Picking Up an Entity Above and Behind Him
_35149:
       byte 10,0                                 ; Reset Berk's Walking Left and Walking Right flags
       byte 8,0                                  ; Set Must Process Current Script Data Flag
       byte _58278&>00ff,(_58278&>ff00)/256      ; #R58278 (Berk, facing into screen, stretching upwards)
       byte _58278&>00ff,(_58278&>ff00)/256      ; #R58278 (Berk, facing into screen, stretching upwards)
       byte 16,0                                 ; Have Berk hold an entity, and position it appropriately between his hands
       byte 1,0,_35173&>00ff,(_35173&>ff00)/256  ; Jump to #R35173 (Berk facing into screen, holding something)

* Script Data Berk Picking Up an Entity that is Above Floor and Below Berk's Top Edge and Behind Him
_35163:
       byte 10,0                                 ; Reset Berk's Walking Left and Walking Right flags
       byte 8,0                                  ; Set Must Process Current Script Data Flag
       byte _57338&>00ff,(_57338&>ff00)/256      ; #R57338 (Berk facing into screen, arms out to the sides)
       byte _57428&>00ff,(_57428&>ff00)/256      ; #R57428 (Berk facing into screen, holding something)
       byte 16,0                                 ; Have Berk hold an entity, and position it appropriately between his hands
_35173:
       byte 22,0                                 ; Move carried entity behind Berk as he faces into screen
       byte _57428&>00ff,(_57428&>ff00)/256      ; #R57428 (Berk facing into screen, holding something)
       byte _57428&>00ff,(_57428&>ff00)/256      ; #R57428 (Berk facing into screen, holding something)
       byte _57428&>00ff,(_57428&>ff00)/256      ; #R57428 (Berk facing into screen, holding something)
       byte _57428&>00ff,(_57428&>ff00)/256      ; #R57428 (Berk facing into screen, holding something)
       byte 1,0,_35073&>00ff,(_35073&>ff00)/256  ; Jump to #R35073 (Berk turning from facing into screen to facing out of screen)

* Script Data Berk Picking Up an Entity on Floor in Front of Him
_35187:
       byte 8,0                                  ; Set Must Process Current Script Data Flag
       byte 10,0                                 ; Reset Berk's Walking Left and Walking Right flags
       byte _56731&>00ff,(_56731&>ff00)/256      ; #R56731 (Berk, facing out of screen, arms outstretched, animated)
       byte _58119&>00ff,(_58119&>ff00)/256      ; #R58119 (Berk, facing out of screen, bending down)
       byte _58119&>00ff,(_58119&>ff00)/256      ; #R58119 (Berk, facing out of screen, bending down)
       byte _58119&>00ff,(_58119&>ff00)/256      ; #R58119 (Berk, facing out of screen, bending down)
       byte 16,0                                 ; Have Berk hold an entity, and position it appropriately between his hands
       byte 1,0,_35081&>00ff,(_35081&>ff00)/256  ; Jump to #R35081 (Berk facing out of screen, ready to respond to control input)

* Script Data Berk Putting an Entity Down on Floor in Front of Him
_35205:
       byte 8,0                                  ; Set Must Process Current Script Data Flag
       byte 21,0                                 ; Move carried entity in front of Berk as he faces out of screen
       byte 17,0                                 ; Have Berk put down an entity in front of him, if appropriate
       byte _58119&>00ff,(_58119&>ff00)/256      ; #R58119 (Berk, facing out of screen, bending down)
       byte _58119&>00ff,(_58119&>ff00)/256      ; #R58119 (Berk, facing out of screen, bending down)
       byte 1,0,_35081&>00ff,(_35081&>ff00)/256  ; Jump to #R35081 (Berk facing out of screen, ready to respond to control input)

* Script Data Berk Putting an Entity Down on Floor Behind Him
_35219:
       byte 8,0                                  ; Set Must Process Current Script Data Flag
       byte 22,0                                 ; Move carried entity behind Berk as he faces into screen
       byte 18,0                                 ; Have Berk put down an entity behind him, if appropriate
       byte _58209&>00ff,(_58209&>ff00)/256      ; #R58209 (Berk facing into screen, bending down)
       byte _58209&>00ff,(_58209&>ff00)/256      ; #R58209 (Berk facing into screen, bending down)
       byte _57338&>00ff,(_57338&>ff00)/256      ; #R57338 (Berk facing into screen, arms out to the sides)
       byte 1,0,_35113&>00ff,(_35113&>ff00)/256  ; Jump to #R35113 (Berk facing into screen, ready to respond to control input)

* Script Data Berk Putting an Entity Down Above Floor Behind Him
_35235:
       byte 8,0                                  ; Set Must Process Current Script Data Flag
       byte 22,0                                 ; Move carried entity behind Berk as he faces into screen
       byte _57428&>00ff,(_57428&>ff00)/256      ; #R57428 (Berk facing into screen, holding something)
       byte 18,0                                 ; Have Berk put down an entity behind him, if appropriate
       byte _58278&>00ff,(_58278&>ff00)/256      ; #R58278 (Berk, facing into screen, stretching upwards)
       byte _58278&>00ff,(_58278&>ff00)/256      ; #R58278 (Berk, facing into screen, stretching upwards)
       byte 1,0,_35073&>00ff,(_35073&>ff00)/256  ; Jump to #R35073 (Berk turning from facing into screen to facing out of screen)

* Script Data Berk Starting to Walk Right
_35251:
       byte 12,0                                 ; Set Berk's Walking Right Flag
       byte 20,0                                 ; Move carried entity to Berk's right as he faces right
_35255:
       byte _55734&>00ff,(_55734&>ff00)/256      ; #R55734 (Berk walking right, animated)
       byte 3,0                                  ; Move Berk right one character
       byte 1,0,_35255&>00ff,(_35255&>ff00)/256  ; Jump to #R35255

* Script Data Berk Starting to Walk Left
_35263:
       byte 11,0                                 ; Set Berk's Walking Left Flag
       byte 19,0                                 ; Move carried entity to Berk's left as he faces left
_35267:
       byte _56275&>00ff,(_56275&>ff00)/256      ; #R56275 (Berk walking left, animated)
       byte 2,0                                  ; Move Berk left one character
       byte 1,0,_35267&>00ff,(_35267&>ff00)/256  ; Jump back to #R35267

* Script Data Berk's Power Expiring
_35275:
       byte _56731&>00ff,(_56731&>ff00)/256      ; #R56731 (Berk, facing out of screen, arms outstretched, animated)
       byte 57,0                                 ; Cycle attributes (full-screen), clear display buffers and paint red areas outside current
                                                 ; room
       byte 1,0,berk_fall_script&>00ff,(berk_fall_script&>ff00)/256            ; Jump to #R35359 (Berk starting to fall downwards)

* Script Data Berk Banging Head (While Jumping)
_35283:
       byte _59464&>00ff,(_59464&>ff00)/256      ; #R59464 (Berk, getting up / banging head, frame 2)
       byte _59464&>00ff,(_59464&>ff00)/256      ; #R59464 (Berk, getting up / banging head, frame 2)
       byte 1,0,berk_fall_script&>00ff,(berk_fall_script&>ff00)/256            ; Jump to #R35359 (Berk starting to fall downwards)

* Script Data Berk Starting to Fall to the Left
_35291:
       byte 8,0                                  ; Set Must Process Current Script Data Flag
       byte 23,0,3,0                             ; Start loop (1) for 3 iterations
       byte _56275&>00ff,(_56275&>ff00)/256      ; #R56275 (Berk walking left, animated)
       byte 2,0                                  ; Move Berk left one character
       byte 24,0                                 ; End loop (1)
* At this point, the fall is in progress
_35303:
       byte 8,0                                  ; Set Must Process Current Script Data Flag
       byte _58853&>00ff,(_58853&>ff00)/256      ; #R58853 (Berk, facing left, falling, arms to sides)
       byte 2,0                                  ; Move Berk left two characters...
       byte 2,0                                  ; ...
       byte _58685&>00ff,(_58685&>ff00)/256      ; #R58685 (Berk, facing left, falling, arms forward)
       byte 2,0                                  ; Move Berk left one character
       byte 35,0                                 ; Move Berk down two characters...
       byte 35,0                                 ; ...
       byte _59048&>00ff,(_59048&>ff00)/256      ; #R59048 (Berk being thrown left)
       byte 35,0                                 ; Move Berk down one character
       byte 1,0,berk_fall_script&>00ff,(berk_fall_script&>ff00)/256            ; Jump to #R35359 (Berk starting to fall downwards)

* Script Data Berk Starting to Fall to the Right
_35327:
       byte 8,0                                  ; Set Must Process Current Script Data Flag
       byte 23,0,3,0                             ; Start loop (1) for 3 iterations
       byte _55734&>00ff,(_55734&>ff00)/256      ; #R55734 (Berk walking right, animated)
       byte 3,0                                  ; Move Berk right one character
       byte 24,0                                 ; End loop (1)
* At this point, the fall is in progress
_35339:
       byte 8,0                                  ; Set Must Process Current Script Data Flag
       byte _58778&>00ff,(_58778&>ff00)/256      ; #R58778 (Berk, facing right, falling, arms to sides)
       byte 3,0                                  ; Move Berk right two characters...
       byte 3,0                                  ; ...
       byte _58592&>00ff,(_58592&>ff00)/256      ; #R58592 (Berk, facing right, falling, arms forward)
       byte 3,0                                  ; Move Berk right one character
       byte 35,0                                 ; Move Berk down two characters...
       byte 35,0                                 ; ...
       byte _58928&>00ff,(_58928&>ff00)/256      ; #R58928 (Berk, being thrown right)
       byte 35,0                                 ; Move Berk down one character
* This is the start of the script data that controls Berk's vertical falls, e.g. when flying power expires, after
* initial sideways fall down Trap Door, etc.
berk_fall_script:
       byte 8,0                                  ; Set Must Process Current Script Data Flag
       byte 29,0                                 ; Make Berk start falling, and drop his carried entity if appropriate
_35363:
       byte _59168&>00ff,(_59168&>ff00)/256      ; #R59168 (Floating / starting to fall, animated)
       byte 30,0                                 ; Check Berk's fall velocity, and react to landing
_35367:
       byte _59239&>00ff,(_59239&>ff00)/256      ; #R59239 (Berk, falling downwards)
       byte 30,0                                 ; Check Berk's fall velocity, and react to landing
* This is the start of the script data that controls Berk when he has landed from a fall. Initially he is lying on
* the floor stunned, and then he gets up.
_35371:
       byte _59311&>00ff,(_59311&>ff00)/256      ; #R59311 (Berk, lying on floor, animated)
       byte 4,0,5,0                              ; If current character and target entity are in the same room then set pending sound to 5
                                                 ; (#R59666)
       byte _59380&>00ff,(_59380&>ff00)/256      ; #R59380 (Berk, getting up, frame 1, animated)
       byte 23,0,15,0                            ; Start loop (1) for 15 iterations
       byte _59311&>00ff,(_59311&>ff00)/256      ; #R59311 (Berk, lying on floor, animated)
       byte 24,0                                 ; End loop (1)
       byte 23,0,4,0                             ; Start loop (1) for 4 iterations
       byte _59380&>00ff,(_59380&>ff00)/256      ; #R59380 (Berk, getting up, frame 1, animated)
       byte 24,0                                 ; End loop (1)
       byte 23,0,2,0                             ; Start loop (1) for 2 iterations
       byte _59311&>00ff,(_59311&>ff00)/256      ; #R59311 (Berk, lying on floor, animated)
       byte _59311&>00ff,(_59311&>ff00)/256      ; #R59311 (Berk, lying on floor, animated)
       byte _59380&>00ff,(_59380&>ff00)/256      ; #R59380 (Berk, getting up, frame 1, animated)
       byte _59464&>00ff,(_59464&>ff00)/256      ; #R59464 (Berk, getting up / banging head, frame 2)
       byte 24,0                                 ; End loop (1)
       byte _56731&>00ff,(_56731&>ff00)/256      ; #R56731 (Berk, facing out of screen, arms outstretched, animated)
       byte _56731&>00ff,(_56731&>ff00)/256      ; #R56731 (Berk, facing out of screen, arms outstretched, animated)
       byte 1,0,_35081&>00ff,(_35081&>ff00)/256  ; Jump to #R35081 (Berk facing out of screen, ready to respond to control input)

* Script Data Berk Starting to Fly Holding nothing
_35417:
       byte 21,0                                 ; Move carried entity in front of Berk as he faces out of screen
       byte 57,0                                 ; Cycle attributes (full-screen), clear display buffers and paint red areas outside current
                                                 ; room
       byte 15,0,_35433&>00ff,(_35433&>ff00)/256 ; If Berk is carrying something then jump to #R35433
_35425:
       byte _56801&>00ff,(_56801&>ff00)/256      ; #R56801 (Berk with wings, animated)
       byte 32,0                                 ; Update Berk's position and state (flying) depending upon control input
       byte 1,0,_35425&>00ff,(_35425&>ff00)/256  ; Jump back to #R35425
* Holding something
_35433:
       byte _57055&>00ff,(_57055&>ff00)/256      ; #R57055 (Berk with wings and holding something, animated)
       byte 32,0                                 ; Update Berk's position and state (flying) depending upon control input
       byte 1,0,_35433&>00ff,(_35433&>ff00)/256  ; Jump back to #R35433

* Script Data Berk Jumping
*
* Berk Starting to Jump Straight Up
_35441:
       byte 8,0                                  ; Set Must Process Current Script Data Flag
       byte 10,0                                 ; Reset Berk's Walking Left and Walking Right flags
       byte _58119&>00ff,(_58119&>ff00)/256      ; #R58119 (Berk, facing out of screen, bending down)
_35447:
       byte _58119&>00ff,(_58119&>ff00)/256      ; #R58119 (Berk, facing out of screen, bending down)
_35449:
       byte _56731&>00ff,(_56731&>ff00)/256      ; #R56731 (Berk, facing out of screen, arms outstretched, animated)
       byte 33,0                                 ; Advance Berk's jump and select next phase if current phase complete
       byte 1,0,_35449&>00ff,(_35449&>ff00)/256  ; Jump back to #R35449
* Berk Landing (After Jump)
_35457:
       byte 8,0                                  ; Set Must Process Current Script Data Flag
       byte 10,0                                 ; Reset Berk's Walking Left and Walking Right flags
       byte _58119&>00ff,(_58119&>ff00)/256      ; #R58119 (Berk, facing out of screen, bending down)
       byte _58119&>00ff,(_58119&>ff00)/256      ; #R58119 (Berk, facing out of screen, bending down)
       byte 1,0,_35081&>00ff,(_35081&>ff00)/256  ; Jump to #R35081 (Berk facing out of screen, ready to respond to control input)
* Berk Jumping Left
_35469:
       byte 8,0                                  ; Set Must Process Current Script Data Flag
       byte 11,0                                 ; Set Berk's Walking Left Flag
       byte _56275&>00ff,(_56275&>ff00)/256      ; #R56275 (Berk walking left, animated)
       byte 33,0                                 ; Advance Berk's jump and select next phase if current phase complete
       byte 1,0,_35469&>00ff,(_35469&>ff00)/256  ; Jump to #R35469
* Berk Jumping Right
_35481:
       byte 8,0                                  ; Set Must Process Current Script Data Flag
       byte 12,0                                 ; Set Berk's Walking Right Flag
       byte _55734&>00ff,(_55734&>ff00)/256      ; #R55734 (Berk walking right, animated)
       byte 33,0                                 ; Advance Berk's jump and select next phase if current phase complete
       byte 1,0,_35481&>00ff,(_35481&>ff00)/256  ; Jump to #R35481

* Script Data Berk Eating an Entity
_35493:
       byte 8,0                                  ; Set Must Process Current Script Data Flag
       byte 23,0,4,0                             ; Start loop (1) for 4 iterations
       byte _56743&>00ff,(_56743&>ff00)/256      ; #R56743 (Berk, arms raised, eating, animated)
       byte 24,0                                 ; End loop (1)
       byte 56,0                                 ; Give Berk power corresponding to entity eaten
       byte _56731&>00ff,(_56731&>ff00)/256      ; #R56731 (Berk, facing out of screen, arms outstretched, animated)
       byte _56731&>00ff,(_56731&>ff00)/256      ; #R56731 (Berk, facing out of screen, arms outstretched, animated)
       byte 57,0                                 ; Cycle attributes (full-screen), clear display buffers and paint red areas outside current
                                                 ; room
       byte 1,0,_35081&>00ff,(_35081&>ff00)/256  ; Jump to #R35081 (Berk facing out of screen, ready to respond to control input)


* Graphic Layout Data Berk Stepping right, right foot out and forward, arm and eye animated
_55698:
       byte 251,_55784&>00ff,(_55784&>ff00)/256  ; Process graphic layout data at #R55784 and upon returning, move cursor to base
                                                 ; coordinates
       byte 251,_55765&>00ff,(_55765&>ff00)/256  ; Process graphic layout data at #R55765 and upon returning, move cursor to base
                                                 ; coordinates
       byte 250,4,254                            ; Change cursor's x- and y-coordinates by -2 and +4 characters respectively
       byte 248,_55930&>00ff,(_55930&>ff00)/256  ; Jump to #R55930 (Berk's feet, right foot raised and forward, facing right)
* Stepping right, right foot out, arm and eye animated
_55710:
       byte 251,_55784&>00ff,(_55784&>ff00)/256  ; Process graphic layout data at #R55784 and upon returning, move cursor to base
                                                 ; coordinates
       byte 251,_55765&>00ff,(_55765&>ff00)/256  ; Process graphic layout data at #R55765 and upon returning, move cursor to base
                                                 ; coordinates
       byte 250,4,254                            ; Change cursor's x- and y-coordinates by -2 and +4 characters respectively
       byte 248,_55896&>00ff,(_55896&>ff00)/256  ; Jump to #R55896 (Berk's feet, right foot raised and to the side, facing right)
* Facing right, arm and eye animated
_55722:
       byte 251,_55784&>00ff,(_55784&>ff00)/256  ; Process graphic layout data at #R55784 and upon returning, move cursor to base
                                                 ; coordinates
       byte 250,4,254                            ; Change cursor's x- and y-coordinates by -2 and +4 characters respectively
       byte 251,_56053&>00ff,(_56053&>ff00)/256  ; Process graphic layout data at #R56053 and upon returning, move cursor to base
                                                 ; coordinates
       byte 248,_55765&>00ff,(_55765&>ff00)/256  ; Jump to #R55765 (Berk's hand, animated, right-facing)
* Walking right, animated
_55734:
       byte 251,_55784&>00ff,(_55784&>ff00)/256  ; Process graphic layout data at #R55784 and upon returning, move cursor to base
                                                 ; coordinates
       byte 251,_55743&>00ff,(_55743&>ff00)/256  ; Process graphic layout data at #R55743 and upon returning, move cursor to base
                                                 ; coordinates
       byte 248,_55765&>00ff,(_55765&>ff00)/256  ; Jump to #R55765 (Berk's hand, animated, right-facing)
* Lower half of body, walking right, animated
_55743:
       byte 250,4,254                            ; Change cursor's x- and y-coordinates by -2 and +4 characters respectively
       byte 243,0,7                              ; Increase current state value n (initially 0), up to maximum of 7, resetting to zero
                                                 ; if maximum reached and jump to n-th address in following list (see trivia):
       byte _55896&>00ff,(_55896&>ff00)/256      ; #R55896 (Berk's feet, right foot raised and to the side, facing right)
       byte _55930&>00ff,(_55930&>ff00)/256      ; #R55930 (Berk's feet, right foot raised and forward, facing right)
       byte _55967&>00ff,(_55967&>ff00)/256      ; #R55967 (lower half of body and feet, facing right, right foot forward)
       byte _56007&>00ff,(_56007&>ff00)/256      ; #R56007 (lower half of body and feet, facing right, left foot behind)
       byte _56053&>00ff,(_56053&>ff00)/256      ; #R56053 (lower half of body and feet, facing right, standing)
       byte _56090&>00ff,(_56090&>ff00)/256      ; #R56090 (lower half of body and feet, facing right, left foot forward)
       byte _56130&>00ff,(_56130&>ff00)/256      ; #R56130 (lower half of body and feet, facing right, left foot forward, right foot
                                                 ; behind)
       byte _56167&>00ff,(_56167&>ff00)/256      ; #R56167 (lower half of body and feet, facing right, left foot forward, right foot
                                                 ; out and behind)
* Arm, facing right, animated
_55765:
       byte 243,0,7                              ; Increase current state value n (initially 0), up to maximum of 7, resetting to zero
                                                 ; if maximum reached and jump to n-th address in following list (see trivia):
       byte _55825&>00ff,(_55825&>ff00)/256      ; #R55825 (arm, facing right, up)
       byte _55825&>00ff,(_55825&>ff00)/256      ; #R55825 (arm, facing right, up)
       byte _55825&>00ff,(_55825&>ff00)/256      ; #R55825 (arm, facing right, up)
       byte _55825&>00ff,(_55825&>ff00)/256      ; #R55825 (arm, facing right, up)
       byte _55859&>00ff,(_55859&>ff00)/256      ; #R55859 (arm, facing right, down)
       byte _55859&>00ff,(_55859&>ff00)/256      ; #R55859 (arm, facing right, down)
       byte _55859&>00ff,(_55859&>ff00)/256      ; #R55859 (arm, facing right, down)
       byte _55859&>00ff,(_55859&>ff00)/256      ; #R55859 (arm, facing right, down)
* Upper body without arm, facing right, eye animated
_55784:
       byte 244,2                                ; Set current graphic set to 2
       byte 254,0,2                              ; Change cursor's x- and y-coordinates by +2 and 0 characters respectively and store
                                                 ; as new base coordinates
       byte 236,6,1,1,1,1,2,3                    ; Modify following instruction to display graphic of random index, chosen from 1, 1,
                                                 ; 1, 1, 2 and 3
       byte 1,7,159,5,65,33
       byte 0,9,30,6,65,33
       byte 0,9,31,7,65,33
       byte 0,9,33,0,9,33
       byte 0,9,33
       byte 255                                  ; End Marker
* Arm, facing right, up
_55825:
       byte 250,1,1                              ; Change cursor's x- and y-coordinates by +1 and +1 characters respectively
       byte 8,65,33,9,65,33
       byte 10,1,29,11,65,161
       byte 12,65,161,13,65,33
       byte 14,1,30,15,65,161
       byte 16,1,33,17,1,32
       byte 255                                  ; End Marker
* Arm, facing right, down
_55859:
       byte 250,1,1                              ; Change cursor's x- and y-coordinates by +1 and +1 characters respectively
       byte 6,129,31,18,65,161
       byte 19,65,33,20,65,33
       byte 21,1,29,89,65,161
       byte 22,65,161,23,65,33
       byte 24,1,30,25,65,161
       byte 26,1,32
       byte 255                                  ; End Marker
* Lower half of body and feet, facing right, right foot out
_55896:
       byte 27,65,33,28,33,33
       byte 29,33,33,30,65,29
       byte 31,65,33,32,33,33
       byte 33,33,33,34,65,30
       byte 35,1,33,36,1,33
       byte 37,1,32
       byte 255                                  ; End Marker
* Lower half of body and feet, facing right, right foot out and forward
_55930:
       byte 27,65,33,0,9,33
       byte 38,33,33,39,33,33
       byte 40,4,28,41,65,33
       byte 0,9,33,42,33,33
       byte 43,68,29,53,1,33
       byte 36,1,33,44,1,32
       byte 255                                  ; End Marker
* Lower half of body and feet, facing right, right foot forward
_55967:
       byte 27,65,33,0,9,33
       byte 45,65,33,46,65,33
       byte 47,1,28,48,65,33
       byte 49,65,33,50,65,33
       byte 51,65,33,52,1,27
       byte 53,1,33,54,1,33
       byte 55,1,32
       byte 255                                  ; End Marker
* Lower half of body and feet, facing right, left foot behind
_56007:
       byte 27,65,33,0,9,33
       byte 0,9,33,0,9,28
       byte 56,1,33,57,65,33
       byte 0,9,33,45,65,33
       byte 58,65,33,59,65,28
       byte 60,1,33,61,1,33
       byte 62,1,33,54,1,33
       byte 63,1,32
       byte 255                                  ; End Marker
* Lower half of body and feet, facing right, standing
_56053:
       byte 27,65,33,0,9,33
       byte 0,9,33,0,9,29
       byte 64,65,33,45,65,161
       byte 58,65,161,59,65,29
       byte 65,1,33,62,1,33
       byte 54,1,33,63,1,32
       byte 255                                  ; End Marker
* Lower half of body and feet, facing right, left foot forward
_56090:
       byte 27,65,33,0,9,33
       byte 0,9,33,0,9,29
       byte 64,65,33,66,65,161
       byte 67,65,161,68,65,33
       byte 69,1,28,65,1,33
       byte 70,1,33,71,1,33
       byte 72,1,32
       byte 255                                  ; End Marker
* Lower half of body and feet, facing right, left foot forward, right foot behind
_56130:
       byte 27,65,33,0,9,33
       byte 0,9,33,0,9,29
       byte 73,65,33,74,65,161
       byte 0,9,33,75,65,33
       byte 76,1,28,77,1,33
       byte 78,1,33,79,1,32
       byte 255                                  ; End Marker
* Lower half of body and feet, facing right, left foot forward, right foot out and behind
_56167:
       byte 80,33,33,81,33,33
       byte 0,9,33,30,65,29
       byte 82,68,33,83,33,33
       byte 84,65,33,85,65,33
       byte 59,65,28,86,4,33
       byte 87,4,33,88,1,33
       byte 54,1,33,63,1,32
       byte 255                                  ; End Marker

* Graphic Layout Data Berk Walking Left Upper body without arm, facing left, eye animated
_56210:
       byte 244,2                                ; Set current graphic set to 2
       byte 254,0,2                              ; Change cursor's x- and y-coordinates by +2 and 0 characters respectively and
                                                 ; store as new base coordinates
       byte 236,6,1,1,1,1,2,3                    ; Modify following instruction to display graphic of random index, chosen from 1,
                                                 ; 1, 1, 1, 2 and 3
       byte 1,135,160,0,9,33
       byte 5,129,32,0,9,33
       byte 6,129,30,0,9,33
       byte 0,9,33,7,193,32
       byte 255                                  ; End Marker
* Stepping left, left foot out, arm and eye animated
_56248:
       byte 251,_56210&>00ff,(_56210&>ff00)/256  ; Process graphic layout data at #R56210 and upon returning, move cursor to base
                                                 ; coordinates
       byte 251,_56303&>00ff,(_56303&>ff00)/256  ; Process graphic layout data at #R56303 and upon returning, move cursor to base
                                                 ; coordinates
       byte 248,_56393&>00ff,(_56393&>ff00)/256  ; Jump to #R56393 (lower half of body and feet, facing left, left foot out)
* Stepping left, left foot out and forward, arm and eye animated
_56257:
       byte 251,_56210&>00ff,(_56210&>ff00)/256  ; Process graphic layout data at #R56210 and upon returning, move cursor to base
                                                 ; coordinates
       byte 251,_56303&>00ff,(_56303&>ff00)/256  ; Process graphic layout data at #R56303 and upon returning, move cursor to base
                                                 ; coordinates
       byte 248,_56430&>00ff,(_56430&>ff00)/256  ; Jump to #R56430 (lower half of body and feet, facing left, left foot out and
                                                 ; forward)
* Facing left, arm and eye animated
_56266:
       byte 251,_56210&>00ff,(_56210&>ff00)/256  ; Process graphic layout data at #R56210 and upon returning, move cursor to base
                                                 ; coordinates
       byte 251,_56562&>00ff,(_56562&>ff00)/256  ; Process graphic layout data at #R56562 and upon returning, move cursor to base
                                                 ; coordinates
       byte 248,_56303&>00ff,(_56303&>ff00)/256  ; Jump to #R56303 (Arm, facing left, animated)
* Walking left, animated
_56275:
       byte 251,_56210&>00ff,(_56210&>ff00)/256  ; Process graphic layout data at #R56210 and upon returning, move cursor to base
                                                 ; coordinates
       byte 251,_56284&>00ff,(_56284&>ff00)/256  ; Process graphic layout data at #R56284 and upon returning, move cursor to base
                                                 ; coordinates
       byte 248,_56303&>00ff,(_56303&>ff00)/256  ; Jump to #R56303 (Arm, facing left, animated)
* Lower half of body, walking left, animated
_56284:
       byte 243,0,7                              ; Increase current state value n (initially 0), up to maximum of 7, resetting to
                                                 ; zero if maximum reached and jump to n-th address in following list (see trivia):
       byte _56393&>00ff,(_56393&>ff00)/256      ; #R56393 (lower half of body and feet, facing left, left foot out)
       byte _56430&>00ff,(_56430&>ff00)/256      ; #R56430 (lower half of body and feet, facing left, left foot out and forward)
       byte _56470&>00ff,(_56470&>ff00)/256      ; #R56470 (lower half of body and feet, facing left, left foot forward)
       byte _56513&>00ff,(_56513&>ff00)/256      ; #R56513 (lower half of body and feet, facing left, right foot behind)
       byte _56562&>00ff,(_56562&>ff00)/256      ; #R56562 (lower half of body and feet, facing left, standing)
       byte _56602&>00ff,(_56602&>ff00)/256      ; #R56602 (lower half of body and feet, facing left, right foot forward)
       byte _56645&>00ff,(_56645&>ff00)/256      ; #R56645 (lower half of body and feet, facing left, right foot forward, left foot
                                                 ; behind)
       byte _56685&>00ff,(_56685&>ff00)/256      ; #R56685 (lower half of body and feet, facing left, right foot forward, left foot
                                                 ; out and behind)
* Arm, facing left, animated
_56303:
       byte 243,0,7                              ; Increase current state value n (initially 0), up to maximum of 7, resetting to
                                                 ; zero if maximum reached and jump to n-th address in following list (see trivia):
       byte _56322&>00ff,(_56322&>ff00)/256      ; #R56322 (arm, facing left, up)
       byte _56322&>00ff,(_56322&>ff00)/256      ; #R56322 (arm, facing left, up)
       byte _56322&>00ff,(_56322&>ff00)/256      ; #R56322 (arm, facing left, up)
       byte _56322&>00ff,(_56322&>ff00)/256      ; #R56322 (arm, facing left, up)
       byte _56356&>00ff,(_56356&>ff00)/256      ; #R56356 (arm, facing left, down)
       byte _56356&>00ff,(_56356&>ff00)/256      ; #R56356 (arm, facing left, down)
       byte _56356&>00ff,(_56356&>ff00)/256      ; #R56356 (arm, facing left, down)
       byte _56356&>00ff,(_56356&>ff00)/256      ; #R56356 (arm, facing left, down)
* Arm, facing left, up
_56322:
       byte 250,1,253                            ; Change cursor's x- and y-coordinates by -3 and +1 characters respectively
       byte 10,129,33,9,129,33
       byte 8,193,30,14,193,33
       byte 13,193,33,12,193,161
       byte 11,193,157,17,129,33
       byte 16,193,33,15,193,161
       byte 255                                  ; End Marker
* Arm, facing left, down
_56356:
       byte 250,1,255                            ; Change cursor's x- and y-coordinates by -1 and +1 characters respectively
       byte 6,1,30,21,129,33
       byte 20,193,33,19,193,33
       byte 18,193,157,24,129,33
       byte 23,193,33,22,193,161
       byte 89,193,158,26,129,33
       byte 25,193,161
       byte 255                                  ; End Marker
* Lower half of body and feet, facing left, left foot out
_56393:
       byte 250,4,255                            ; Change cursor's x- and y-coordinates by -1 and +4 characters respectively
       byte 30,193,33,29,225,33
       byte 28,225,33,27,193,29
       byte 34,129,33,33,225,33
       byte 32,161,33,31,129,29
       byte 37,129,33,36,1,33
       byte 35,129,33
       byte 255                                  ; End Marker
* Lower half of body and feet, facing left, left foot out and forward
_56430:
       byte 250,4,254                            ; Change cursor's x- and y-coordinates by -2 and +4 characters respectively
       byte 40,132,33,39,161,33
       byte 38,225,33,0,9,33
       byte 0,9,29,43,132,33
       byte 42,225,33,0,9,33
       byte 41,193,30,44,129,33
       byte 36,1,33,53,129,33
       byte 255                                  ; End Marker
* Lower half of body and feet, facing left, left foot forward
_56470:
       byte 250,4,254                            ; Change cursor's x- and y-coordinates by -2 and +4 characters respectively
       byte 47,129,33,46,193,161
       byte 45,193,161,0,9,33
       byte 27,193,28,52,129,33
       byte 51,193,33,50,193,161
       byte 49,193,161,48,193,159
       byte 55,129,33,54,1,33
       byte 53,129,33
       byte 255                                  ; End Marker
* Lower half of body and feet, facing left, right foot behind
_56513:
       byte 250,4,255                            ; Change cursor's x- and y-coordinates by -1 and +4 characters respectively
       byte 30,193,33,0,9,33
       byte 0,9,33,27,193,28
       byte 59,193,33,58,193,161
       byte 45,193,161,0,9,33
       byte 57,193,161,56,129,27
       byte 63,129,33,54,1,33
       byte 62,129,33,61,129,33
       byte 60,129,33
       byte 255                                  ; End Marker
* Lower half of body and feet, facing left, standing
_56562:
       byte 250,4,255                            ; Change cursor's x- and y-coordinates by -1 and +4 characters respectively
       byte 30,193,33,0,9,33
       byte 0,9,33,27,193,29
       byte 59,193,33,58,193,161
       byte 45,193,161,64,193,29
       byte 63,129,33,54,1,33
       byte 62,129,33,65,129,33
       byte 255                                  ; End Marker
* Lower half of body and feet, facing left, right foot forward
_56602:
       byte 250,4,255                            ; Change cursor's x- and y-coordinates by -1 and +4 characters respectively
       byte 30,193,33,0,9,33
       byte 0,9,33,27,193,28
       byte 69,129,33,68,193,161
       byte 67,193,161,66,193,161
       byte 64,193,29,72,129,33
       byte 71,129,33,70,129,33
       byte 65,129,33
       byte 255                                  ; End Marker
* Lower half of body and feet, facing left, right foot forward, left foot behind
_56645:
       byte 250,4,255                            ; Change cursor's x- and y-coordinates by -1 and +4 characters respectively
       byte 30,193,33,0,9,33
       byte 0,9,33,27,193,28
       byte 76,129,33,75,193,161
       byte 0,9,33,74,193,161
       byte 73,193,158,79,129,33
       byte 78,129,33,77,129,33
       byte 255                                  ; End Marker
* Lower half of body and feet, facing left, right foot forward, left foot out and behind
_56685:
       byte 250,4,255                            ; Change cursor's x- and y-coordinates by -1 and +4 characters respectively
       byte 30,193,33,0,9,33
       byte 81,225,33,80,225,28
       byte 59,193,33,85,193,161
       byte 84,193,161,83,225,33
       byte 82,196,28,63,129,33
       byte 54,1,33,88,129,33
       byte 87,132,33,86,132,33
       byte 255                                  ; End Marker

* Graphic Layout Data Berk Facing Out of Screen Arms outstretched, animated
_56731:
       byte 251,_56880&>00ff,(_56880&>ff00)/256  ; Process graphic layout data at #R56880 and upon returning, move cursor to base
                                                 ; coordinates
       byte 251,_57607&>00ff,(_57607&>ff00)/256  ; Process graphic layout data at #R57607 and upon returning, move cursor to base
                                                 ; coordinates
       byte 251,_57638&>00ff,(_57638&>ff00)/256  ; Process graphic layout data at #R57638 and upon returning, move cursor to base
                                                 ; coordinates
       byte 248,_56813&>00ff,(_56813&>ff00)/256  ; Jump to #R56813
* Arms raised, eating, animated
_56743:
       byte 251,_56880&>00ff,(_56880&>ff00)/256  ; Process graphic layout data at #R56880 and upon returning, move cursor to base
                                                 ; coordinates
       byte 251,_56813&>00ff,(_56813&>ff00)/256  ; Process graphic layout data at #R56813 and upon returning, move cursor to base
                                                 ; coordinates
       byte 250,0,254                            ; Change cursor's x- and y-coordinates by -2 and 0 characters respectively
       byte 172,1,33,217,1,35
       byte 217,129,33,172,129,27
       byte 137,65,33,138,65,163
       byte 138,193,161,137,193,27
       byte 139,1,33,140,65,163
       byte 140,193,161,139,129,28
       byte 147,65,35,147,193,29
       byte 64,65,35,64,193,33
       byte 255                                  ; End Marker
* With wings, animated
_56801:
       byte 251,_58410&>00ff,(_58410&>ff00)/256  ; Process graphic layout data at #R58410 and upon returning, move cursor to base
                                                 ; coordinates
_56804:
       byte 251,_56880&>00ff,(_56880&>ff00)/256  ; Process graphic layout data at #R56880 and upon returning, move cursor to base
                                                 ; coordinates
       byte 251,_57576&>00ff,(_57576&>ff00)/256  ; Process graphic layout data at #R57576 and upon returning, move cursor to base
                                                 ; coordinates
       byte 251,_57545&>00ff,(_57545&>ff00)/256  ; Process graphic layout data at #R57545 and upon returning, move cursor to base
                                                 ; coordinates
_56813:
       byte 251,_56838&>00ff,(_56838&>ff00)/256  ; Process graphic layout data at #R56838 and upon returning, move cursor to base
                                                 ; coordinates
_56816:
       byte 250,5,254                            ; Change cursor's x- and y-coordinates by -2 and +5 characters respectively
_56819:
       byte 59,193,33,58,193,161
       byte 45,193,158,63,129,33
       byte 54,1,33,62,129,33
       byte 255                                  ; End Marker
* Left foot
_56838:
       byte 250,5,1                              ; Change cursor's x- and y-coordinates by +1 and +5 characters respectively
_56841:
       byte 45,65,161,58,65,161
       byte 59,65,30,62,1,33
       byte 54,1,33,63,1,33
       byte 255                                  ; End Marker
* Middle of body, facing into screen
_56860:
       byte 254,0,2                              ; Change cursor's x- and y-coordinates by +2 and 0 characters respectively and
                                                 ; store as new base coordinates
       byte 244,2                                ; Set current graphic set to 2
       byte 93,65,33,93,65,31
       byte 0,9,33,0,9,31
       byte 248,_56976&>00ff,(_56976&>ff00)/256  ; Jump to #R56976
* Middle of body, facing out of screen, eyes and mouth animated
_56880:
       byte 254,0,2                              ; Change cursor's x- and y-coordinates by +2 and 0 characters respectively and
                                                 ; store as new base coordinates
       byte 244,2                                ; Set current graphic set to 2
       byte 249,4,1                              ; If state n (initially 1) has remaining time of zero then reset its time to
                                                 ; maximum and randomly select a new state, n, from the 4 in the following list.
                                                 ; Jump to the address specified in the current state and decrease its remaining
                                                 ; time:
       byte 10,10,_56931&>00ff,(_56931&>ff00)/256; #R56931 (for 10 ticks)
       byte 5,5,_56904&>00ff,(_56904&>ff00)/256  ; #R56904 (for 5 ticks)
       byte 5,5,_56913&>00ff,(_56913&>ff00)/256  ; #R56913 (for 5 ticks)
       byte 3,3,_56922&>00ff,(_56922&>ff00)/256  ; #R56922 (for 3 ticks)
* Middle of body, facing out of screen, mouth animated, eyes looking to left
_56904:
       byte 91,7,161,91,7,159
       byte 248,_56937&>00ff,(_56937&>ff00)/256  ; Jump to #R56937
* Middle of body, facing out of screen, mouth animated, eyes looking to right
_56913:
       byte 92,7,161,92,7,159
       byte 248,_56937&>00ff,(_56937&>ff00)/256  ; Jump to #R56937
* Middle of body, facing out of screen, mouth animated, eyes closed
_56922:
       byte 93,1,33,93,1,31
       byte 248,_56937&>00ff,(_56937&>ff00)/256  ; Jump to #R56937
* Middle of body, facing out of screen, mouth animated, eyes looking ahead
_56931:
       byte 90,7,161,90,7,159
_56937:
       byte 249,3,1                              ; If state n (initially 1) has remaining time of zero then reset its time to
                                                 ; maximum and randomly select a new state, n, from the 3 in the following list.
                                                 ; Jump to the address specified in the current state and decrease its remaining
                                                 ; time:
       byte 6,6,_56952&>00ff,(_56952&>ff00)/256  ; #R56952 (for 6 ticks)
       byte 6,6,_56970&>00ff,(_56970&>ff00)/256  ; #R56970 (for 6 ticks)
       byte 2,2,_56961&>00ff,(_56961&>ff00)/256  ; #R56961 (for 2 ticks)
* Middle of body, facing out of screen, mouth 1, no eyes
_56952:
       byte 94,65,161,95,65,159
       byte 248,_56976&>00ff,(_56976&>ff00)/256  ; Jump to #R56976
* Middle of body, facing out of screen, mouth 2, no eyes
_56961:
       byte 98,65,161,99,65,159
       byte 248,_56976&>00ff,(_56976&>ff00)/256  ; Jump to #R56976
* Middle of body, facing out of screen, mouth 3, no eyes
_56970:
       byte 96,65,161,97,65,159
_56976:
       byte 0,9,33,0,9,31
       byte 0,9,33,0,9,31
       byte 0,9,33,0,9,33
       byte 255                                  ; End Marker
* Stepping forward, frame 1, animated
       byte 251,_56880&>00ff,(_56880&>ff00)/256  ; Process graphic layout data at #R56880 and upon returning, move cursor to base
                                                 ; coordinates
       byte 251,_57607&>00ff,(_57607&>ff00)/256  ; Process graphic layout data at #R57607 and upon returning, move cursor to base
                                                 ; coordinates
       byte 251,_57576&>00ff,(_57576&>ff00)/256  ; Process graphic layout data at #R57576 and upon returning, move cursor to base
                                                 ; coordinates
       byte 251,_57817&>00ff,(_57817&>ff00)/256  ; Process graphic layout data at #R57817 and upon returning, move cursor to base
                                                 ; coordinates
       byte 248,_56838&>00ff,(_56838&>ff00)/256  ; Jump to #R56838 (left foot)
* Stepping forward, frame 2, animated
       byte 251,_56880&>00ff,(_56880&>ff00)/256  ; Process graphic layout data at #R56880 and upon returning, move cursor to base
                                                 ; coordinates
       byte 251,_57607&>00ff,(_57607&>ff00)/256  ; Process graphic layout data at #R57607 and upon returning, move cursor to base
                                                 ; coordinates
       byte 251,_57703&>00ff,(_57703&>ff00)/256  ; Process graphic layout data at #R57703 and upon returning, move cursor to base
                                                 ; coordinates
       byte 251,_57740&>00ff,(_57740&>ff00)/256  ; Process graphic layout data at #R57740 and upon returning, move cursor to base
                                                 ; coordinates
       byte 248,_57770&>00ff,(_57770&>ff00)/256  ; Jump to #R57770
* Stepping forward, frame 3, animated
       byte 251,_56880&>00ff,(_56880&>ff00)/256  ; Process graphic layout data at #R56880 and upon returning, move cursor to base
                                                 ; coordinates
       byte 251,_57545&>00ff,(_57545&>ff00)/256  ; Process graphic layout data at #R57545 and upon returning, move cursor to base
                                                 ; coordinates
       byte 251,_57638&>00ff,(_57638&>ff00)/256  ; Process graphic layout data at #R57638 and upon returning, move cursor to base
                                                 ; coordinates
       byte 251,_56816&>00ff,(_56816&>ff00)/256  ; Process graphic layout data at #R56816 and upon returning, move cursor to base
                                                 ; coordinates
       byte 248,_57839&>00ff,(_57839&>ff00)/256  ; Jump to #R57839 (left foot raised and part of lower body, facing towards
                                                 ; screen)
* Stepping forward, frame 4, animated
       byte 251,_56880&>00ff,(_56880&>ff00)/256  ; Process graphic layout data at #R56880 and upon returning, move cursor to base
                                                 ; coordinates
       byte 251,_57669&>00ff,(_57669&>ff00)/256  ; Process graphic layout data at #R57669 and upon returning, move cursor to base
                                                 ; coordinates
       byte 251,_57638&>00ff,(_57638&>ff00)/256  ; Process graphic layout data at #R57638 and upon returning, move cursor to base
                                                 ; coordinates
       byte 251,_57795&>00ff,(_57795&>ff00)/256  ; Process graphic layout data at #R57795 and upon returning, move cursor to base
                                                 ; coordinates
       byte 248,_57755&>00ff,(_57755&>ff00)/256  ; Jump to #R57755
* With wings and holding something, animated
_57055:
       byte 251,_58410&>00ff,(_58410&>ff00)/256  ; Process graphic layout data at #R58410 and upon returning, move cursor to base
                                                 ; coordinates
_57058:
       byte 251,_56880&>00ff,(_56880&>ff00)/256  ; Process graphic layout data at #R56880 and upon returning, move cursor to base
                                                 ; coordinates
       byte 251,_57118&>00ff,(_57118&>ff00)/256  ; Process graphic layout data at #R57118 and upon returning, move cursor to base
                                                 ; coordinates
       byte 251,_56816&>00ff,(_56816&>ff00)/256  ; Process graphic layout data at #R56816 and upon returning, move cursor to base
                                                 ; coordinates
       byte 248,_56838&>00ff,(_56838&>ff00)/256  ; Jump to #R56838 (left foot)
* Holding something while stepping forward, frame 1
       byte 251,_56880&>00ff,(_56880&>ff00)/256  ; Process graphic layout data at #R56880 and upon returning, move cursor to base
                                                 ; coordinates
       byte 251,_57118&>00ff,(_57118&>ff00)/256  ; Process graphic layout data at #R57118 and upon returning, move cursor to base
                                                 ; coordinates
       byte 251,_57817&>00ff,(_57817&>ff00)/256  ; Process graphic layout data at #R57817 and upon returning, move cursor to base
                                                 ; coordinates
       byte 248,_56838&>00ff,(_56838&>ff00)/256  ; Jump to #R56838 (left foot)
* Holding something while stepping forward, frame 2
       byte 251,_56880&>00ff,(_56880&>ff00)/256  ; Process graphic layout data at #R56880 and upon returning, move cursor to base
                                                 ; coordinates
       byte 251,_57118&>00ff,(_57118&>ff00)/256  ; Process graphic layout data at #R57118 and upon returning, move cursor to base
                                                 ; coordinates
       byte 251,_57740&>00ff,(_57740&>ff00)/256  ; Process graphic layout data at #R57740 and upon returning, move cursor to base
                                                 ; coordinates
       byte 248,_57770&>00ff,(_57770&>ff00)/256  ; Jump to #R57770
* Holding something while stepping forward, frame 3
       byte 251,_56880&>00ff,(_56880&>ff00)/256  ; Process graphic layout data at #R56880 and upon returning, move cursor to base
                                                 ; coordinates
       byte 251,_57118&>00ff,(_57118&>ff00)/256  ; Process graphic layout data at #R57118 and upon returning, move cursor to base
                                                 ; coordinates
       byte 251,_56816&>00ff,(_56816&>ff00)/256  ; Process graphic layout data at #R56816 and upon returning, move cursor to base
                                                 ; coordinates
       byte 248,_57839&>00ff,(_57839&>ff00)/256  ; Jump to #R57839 (left foot raised and part of lower body, facing towards
                                                 ; screen)
* Holding something while stepping forward, frame 4
       byte 251,_56880&>00ff,(_56880&>ff00)/256  ; Process graphic layout data at #R56880 and upon returning, move cursor to base
                                                 ; coordinates
       byte 251,_57118&>00ff,(_57118&>ff00)/256  ; Process graphic layout data at #R57118 and upon returning, move cursor to base
                                                 ; coordinates
       byte 251,_57795&>00ff,(_57795&>ff00)/256  ; Process graphic layout data at #R57795 and upon returning, move cursor to base
                                                 ; coordinates
       byte 248,_57755&>00ff,(_57755&>ff00)/256  ; Jump to #R57755
* Arms holding something, variable width
_57118:
       byte 253                                  ; Jump to n-th address in following list where n is the width of the entity
                                                 ; currently held by Berk:
       byte _57127&>00ff,(_57127&>ff00)/256      ; #R57127 (arms holding something, width 1)
       byte _57173&>00ff,(_57173&>ff00)/256      ; #R57173 (arms holding something, width 2)
       byte _57219&>00ff,(_57219&>ff00)/256      ; #R57219 (arms holding something, width 3)
       byte _57274&>00ff,(_57274&>ff00)/256      ; #R57274 (arms holding something, width 4)
* Arms holding something, width 1
_57127:
       byte 250,1,254                            ; Change cursor's x- and y-coordinates by -2 and +1 characters respectively
       byte 101,1,33,135,65,34
       byte 135,193,33,101,129,28
       byte 137,65,33,138,65,162
       byte 138,193,161,137,193,28
       byte 139,1,33,140,65,162
       byte 140,193,161,142,65,29
       byte 141,65,163,0,9,33
       byte 255                                  ; End Marker
* Arms holding something, width 2
_57173:
       byte 250,1,254                            ; Change cursor's x- and y-coordinates by -2 and +1 characters respectively
       byte 101,1,33,135,65,35
       byte 135,193,33,101,129,27
       byte 137,65,33,138,65,163
       byte 138,193,161,137,193,27
       byte 139,1,33,140,65,163
       byte 140,193,161,139,129,28
       byte 141,65,163,141,193,163
       byte 255                                  ; End Marker
* Arms holding something, width 3
_57219:
       byte 250,1,253                            ; Change cursor's x- and y-coordinates by -3 and +1 characters respectively
       byte 101,1,33,143,65,33
       byte 144,65,35,135,193,33
       byte 101,129,26,137,65,33
       byte 138,65,161,0,9,35
       byte 138,193,161,137,193,26
       byte 139,1,33,140,65,161
       byte 0,9,35,140,193,161
       byte 139,129,28,0,9,35
       byte 141,193,33
       byte 255                                  ; End Marker
* Arms holding something, width 4
_57274:
       byte 250,1,253                            ; Change cursor's x- and y-coordinates by -3 and +1 characters respectively
       byte 101,1,33,143,65,33
       byte 144,65,35,144,193,33
       byte 143,193,33,101,129,25
       byte 137,65,33,138,65,161
       byte 0,9,35,0,9,33
       byte 138,193,161,137,193,25
       byte 139,1,33,140,65,161
       byte 0,9,35,0,9,33
       byte 140,193,161,139,129,27
       byte 0,9,35,0,9,33
       byte 255                                  ; End Marker

* Graphic Layout Data Berk Facing Into Screen Arms out to the sides
_57338:
       byte 251,_56860&>00ff,(_56860&>ff00)/256  ; Process graphic layout data at #R56860 and upon returning, move cursor to base
                                                 ; coordinates
       byte 251,_57607&>00ff,(_57607&>ff00)/256  ; Process graphic layout data at #R57607 and upon returning, move cursor to base
                                                 ; coordinates
       byte 251,_57638&>00ff,(_57638&>ff00)/256  ; Process graphic layout data at #R57638 and upon returning, move cursor to base
                                                 ; coordinates
       byte 251,_57792&>00ff,(_57792&>ff00)/256  ; Process graphic layout data at #R57792 and upon returning, move cursor to base
                                                 ; coordinates
       byte 248,_57767&>00ff,(_57767&>ff00)/256  ; Jump to #R57767 (right foot and part of lower body, facing into screen)
* Arms down
_57353:
       byte 251,_56860&>00ff,(_56860&>ff00)/256  ; Process graphic layout data at #R56860 and upon returning, move cursor to base
                                                 ; coordinates
       byte 251,_57905&>00ff,(_57905&>ff00)/256  ; Process graphic layout data at #R57905 and upon returning, move cursor to base
                                                 ; coordinates
       byte 251,_57936&>00ff,(_57936&>ff00)/256  ; Process graphic layout data at #R57936 and upon returning, move cursor to base
                                                 ; coordinates
       byte 251,_57792&>00ff,(_57792&>ff00)/256  ; Process graphic layout data at #R57792 and upon returning, move cursor to base
                                                 ; coordinates
       byte 248,_57767&>00ff,(_57767&>ff00)/256  ; Jump to #R57767 (right foot and part of lower body, facing into screen)
* Stepping into screen, frame 1
       byte 251,_56860&>00ff,(_56860&>ff00)/256  ; Process graphic layout data at #R56860 and upon returning, move cursor to base
                                                 ; coordinates
       byte 251,_57669&>00ff,(_57669&>ff00)/256  ; Process graphic layout data at #R57669 and upon returning, move cursor to base
                                                 ; coordinates
       byte 251,_57936&>00ff,(_57936&>ff00)/256  ; Process graphic layout data at #R57936 and upon returning, move cursor to base
                                                 ; coordinates
       byte 251,_57861&>00ff,(_57861&>ff00)/256  ; Process graphic layout data at #R57861 and upon returning, move cursor to base
                                                 ; coordinates
       byte 248,_57767&>00ff,(_57767&>ff00)/256  ; Jump to #R57767 (right foot and part of lower body, facing into screen)
* Stepping into screen, frame 2
       byte 251,_56860&>00ff,(_56860&>ff00)/256  ; Process graphic layout data at #R56860 and upon returning, move cursor to base
                                                 ; coordinates
       byte 251,_57607&>00ff,(_57607&>ff00)/256  ; Process graphic layout data at #R57607 and upon returning, move cursor to base
                                                 ; coordinates
       byte 251,_57967&>00ff,(_57967&>ff00)/256  ; Process graphic layout data at #R57967 and upon returning, move cursor to base
                                                 ; coordinates
       byte 251,_57792&>00ff,(_57792&>ff00)/256  ; Process graphic layout data at #R57792 and upon returning, move cursor to base
                                                 ; coordinates
       byte 248,_57752&>00ff,(_57752&>ff00)/256  ; Jump to #R57752 (left foot and part of lower body, facing towards screen)
* Stepping into screen, frame 3
       byte 251,_56860&>00ff,(_56860&>ff00)/256  ; Process graphic layout data at #R56860 and upon returning, move cursor to base
                                                 ; coordinates
       byte 251,_57905&>00ff,(_57905&>ff00)/256  ; Process graphic layout data at #R57905 and upon returning, move cursor to base
                                                 ; coordinates
       byte 251,_57638&>00ff,(_57638&>ff00)/256  ; Process graphic layout data at #R57638 and upon returning, move cursor to base
                                                 ; coordinates
       byte 251,_57792&>00ff,(_57792&>ff00)/256  ; Process graphic layout data at #R57792 and upon returning, move cursor to base
                                                 ; coordinates
       byte 248,_57883&>00ff,(_57883&>ff00)/256  ; Jump to #R57883 (right foot raised and part of lower body, facing into screen)
* Stepping into screen, frame 4
       byte 251,_56860&>00ff,(_56860&>ff00)/256  ; Process graphic layout data at #R56860 and upon returning, move cursor to base
                                                 ; coordinates
       byte 251,_58001&>00ff,(_58001&>ff00)/256  ; Process graphic layout data at #R58001 and upon returning, move cursor to base
                                                 ; coordinates
       byte 251,_57638&>00ff,(_57638&>ff00)/256  ; Process graphic layout data at #R57638 and upon returning, move cursor to base
                                                 ; coordinates
       byte 251,_57737&>00ff,(_57737&>ff00)/256  ; Process graphic layout data at #R57737 and upon returning, move cursor to base
                                                 ; coordinates
       byte 248,_57767&>00ff,(_57767&>ff00)/256  ; Jump to #R57767 (right foot and part of lower body, facing into screen)
* Holding something
_57428:
       byte 251,_57473&>00ff,(_57473&>ff00)/256  ; Process graphic layout data at #R57473 and upon returning, move cursor to base
                                                 ; coordinates
       byte 251,_57792&>00ff,(_57792&>ff00)/256  ; Process graphic layout data at #R57792 and upon returning, move cursor to base
                                                 ; coordinates
       byte 248,_57767&>00ff,(_57767&>ff00)/256  ; Jump to #R57767 (right foot and part of lower body, facing into screen)
* Holding something while stepping into screen, frame 1
       byte 251,_57473&>00ff,(_57473&>ff00)/256  ; Process graphic layout data at #R57473 and upon returning, move cursor to base
                                                 ; coordinates
       byte 251,_57861&>00ff,(_57861&>ff00)/256  ; Process graphic layout data at #R57861 and upon returning, move cursor to base
                                                 ; coordinates
       byte 248,_57767&>00ff,(_57767&>ff00)/256  ; Jump to #R57767 (right foot and part of lower body, facing into screen)
* Holding something while stepping into screen, frame 2
       byte 251,_57473&>00ff,(_57473&>ff00)/256  ; Process graphic layout data at #R57473 and upon returning, move cursor to base
                                                 ; coordinates
       byte 251,_57792&>00ff,(_57792&>ff00)/256  ; Process graphic layout data at #R57792 and upon returning, move cursor to base
                                                 ; coordinates
       byte 248,_57752&>00ff,(_57752&>ff00)/256  ; Jump to #R57752 (left foot and part of lower body, facing towards screen)
* Holding something while stepping into screen, frame 3
       byte 251,_57473&>00ff,(_57473&>ff00)/256  ; Process graphic layout data at #R57473 and upon returning, move cursor to base
                                                 ; coordinates
       byte 251,_57792&>00ff,(_57792&>ff00)/256  ; Process graphic layout data at #R57792 and upon returning, move cursor to base
                                                 ; coordinates
       byte 248,_57883&>00ff,(_57883&>ff00)/256  ; Jump to #R57883 (right foot raised and part of lower body, facing into screen)
* Holding something while stepping into screen, frame 4
       byte 251,_57473&>00ff,(_57473&>ff00)/256  ; Process graphic layout data at #R57473 and upon returning, move cursor to base
                                                 ; coordinates
       byte 251,_57737&>00ff,(_57737&>ff00)/256  ; Process graphic layout data at #R57737 and upon returning, move cursor to base
                                                 ; coordinates
       byte 248,_57767&>00ff,(_57767&>ff00)/256  ; Jump to #R57767 (right foot and part of lower body, facing into screen)
* Upper body, holding something
_57473:
       byte 244,2                                ; Set current graphic set to 2
       byte 254,0,2                              ; Change cursor's x- and y-coordinates by +2 and 0 characters respectively and
                                                 ; store as new base coordinates
       byte 93,65,33,93,65,30
       byte 155,65,33,0,9,33
       byte 0,9,33,155,193,28
       byte 158,65,33,167,65,161
       byte 0,9,33,0,9,33
       byte 167,193,161,158,193,27
       byte 168,65,33,169,65,161
       byte 0,9,33,0,9,33
       byte 169,193,161,168,193,28
       byte 0,9,33,0,9,33
       byte 0,9,33,0,9,33
       byte 255                                  ; End Marker

* Graphic Layout Data Berk Body Parts Right arm
_57545:
       byte 250,1,255                            ; Change cursor's x- and y-coordinates by -1 and +1 characters respectively
       byte 100,1,30,101,1,33
       byte 102,65,33,103,65,158
       byte 104,1,33,0,9,33
       byte 106,65,159,107,1,33
       byte 108,65,161
       byte 255                                  ; End Marker
* Left arm
_57576:
       byte 250,1,2                              ; Change cursor's x- and y-coordinates by +2 and +1 characters respectively
       byte 100,129,32,103,193,161
       byte 102,193,33,101,129,30
       byte 106,193,161,0,9,33
       byte 104,129,30,108,193,161
       byte 107,129,33
       byte 255                                  ; End Marker
* Right arm raised
_57607:
       byte 250,0,254                            ; Change cursor's x- and y-coordinates by -2 and 0 characters respectively
_57610:
       byte 109,1,31,110,65,33
       byte 111,65,33,112,65,30
       byte 113,65,33,114,65,33
       byte 115,65,32,7,65,32
       byte 0,9,33
       byte 255                                  ; End Marker
* Left arm raised
_57638:
       byte 250,0,3                              ; Change cursor's x- and y-coordinates by +3 and 0 characters respectively
_57641:
       byte 109,129,31,112,193,33
       byte 111,193,33,110,193,30
       byte 115,193,33,114,193,33
       byte 113,193,30,7,193,32
       byte 27,193,33
       byte 255                                  ; End Marker
* Right arm, walking into or out of screen
_57669:
       byte 250,1,255                            ; Change cursor's x- and y-coordinates by -1 and +1 characters respectively
       byte 100,65,29,116,1,33
       byte 117,1,33,118,65,33
       byte 119,65,157,120,1,33
       byte 121,65,33,122,65,33
       byte 123,65,160,27,65,33
       byte 255                                  ; End Marker
* Left arm, walking into or out of screen
_57703:
       byte 250,1,2                              ; Change cursor's x- and y-coordinates by +2 and +1 characters respectively
       byte 100,193,32,119,193,161
       byte 118,193,33,117,129,33
       byte 116,129,29,123,193,161
       byte 122,193,33,121,193,33
       byte 120,129,29,27,193,33
       byte 255                                  ; End Marker
* Right foot and part of lower body, facing towards screen
_57737:
       byte 250,1,0                              ; Change cursor's x- and y-coordinates by 0 and +1 characters respectively
_57740:
       byte 250,4,255                            ; Change cursor's x- and y-coordinates by -1 and +4 characters respectively
       byte 27,65,33,0,9,30
       byte 248,_56819&>00ff,(_56819&>ff00)/256  ; Jump to #R56819
* Left foot and part of lower body, facing towards screen
_57752:
       byte 250,1,0                              ; Change cursor's x- and y-coordinates by 0 and +1 characters respectively
_57755:
       byte 250,4,1                              ; Change cursor's x- and y-coordinates by +1 and +4 characters respectively
       byte 0,9,33,27,193,31
       byte 248,_56841&>00ff,(_56841&>ff00)/256  ; Jump to #R56841
* Right foot and part of lower body, facing into screen
_57767:
       byte 250,1,0                              ; Change cursor's x- and y-coordinates by 0 and +1 characters respectively
_57770:
       byte 250,4,1                              ; Change cursor's x- and y-coordinates by +1 and +4 characters respectively
       byte 0,9,33,124,65,161
       byte 59,1,30,125,65,33
       byte 126,65,33,63,1,33
       byte 255                                  ; End Marker
* Left foot and part of lower body, facing into screen
_57792:
       byte 250,1,0                              ; Change cursor's x- and y-coordinates by 0 and +1 characters respectively
_57795:
       byte 250,4,254                            ; Change cursor's x- and y-coordinates by -2 and +4 characters respectively
       byte 59,129,33,124,193,161
       byte 0,9,30,63,129,33
       byte 126,193,33,125,193,33
       byte 255                                  ; End Marker
* Right foot raised and part of lower body, facing towards screen
_57817:
       byte 250,4,255                            ; Change cursor's x- and y-coordinates by -1 and +4 characters respectively
       byte 80,97,33,81,97,31
       byte 82,68,33,83,97,31
       byte 86,4,33,87,4,33
       byte 255                                  ; End Marker
* Left foot raised and part of lower body, facing towards screen
_57839:
       byte 250,4,1                              ; Change cursor's x- and y-coordinates by +1 and +4 characters respectively
       byte 81,225,33,80,225,31
       byte 83,225,33,82,196,31
       byte 87,132,33,86,132,33
       byte 255                                  ; End Marker
* Left foot raised and part of lower body, facing into screen
_57861:
       byte 250,4,254                            ; Change cursor's x- and y-coordinates by -2 and +4 characters respectively
       byte 130,65,32,131,65,33
       byte 132,65,161,0,9,31
       byte 133,1,33,125,193,33
       byte 255                                  ; End Marker
* Right foot raised and part of lower body, facing into screen
_57883:
       byte 250,4,3                              ; Change cursor's x- and y-coordinates by +3 and +4 characters respectively
       byte 130,193,30,0,9,33
       byte 132,193,161,131,193,30
       byte 125,65,33,133,129,33
       byte 255                                  ; End Marker
* Left arm down, facing into screen
_57905:
       byte 250,1,255                            ; Change cursor's x- and y-coordinates by -1 and +1 characters respectively
       byte 100,65,30,101,1,33
       byte 102,65,33,127,65,158
       byte 104,1,33,0,9,33
       byte 128,65,159,107,65,33
       byte 129,65,161
       byte 255                                  ; End Marker
* Right arm down, facing into screen
_57936:
       byte 250,1,2                              ; Change cursor's x- and y-coordinates by +2 and +1 characters respectively
       byte 100,193,32,127,193,161
       byte 102,193,33,101,129,30
       byte 128,193,161,0,9,33
       byte 104,129,30,129,193,161
       byte 107,193,33
       byte 255                                  ; End Marker
* Right arm raised, facing into screen
_57967:
       byte 250,1,2                              ; Change cursor's x- and y-coordinates by +2 and +1 characters respectively
       byte 100,193,32,127,193,161
       byte 118,193,33,117,129,33
       byte 116,129,29,128,193,161
       byte 122,193,33,105,1,33
       byte 134,129,29,0,9,33
       byte 255                                  ; End Marker
* Left arm raised, facing into screen
_58001:
       byte 250,1,255                            ; Change cursor's x- and y-coordinates by -1 and +1 characters respectively
       byte 100,65,29,116,1,33
       byte 117,1,33,118,65,33
       byte 127,65,157,134,1,33
       byte 105,1,33,122,65,33
       byte 128,65,160,0,9,33
       byte 255                                  ; End Marker
* Upper body, pushing to the right
       byte 244,2                                ; Set current graphic set to 2
       byte 254,0,4                              ; Change cursor's x- and y-coordinates by +4 and 0 characters respectively and
                                                 ; store as new base coordinates
       byte 250,1,1                              ; Change cursor's x- and y-coordinates by +1 and +1 characters respectively
       byte 236,4,1,1,2,3                        ; Modify following instruction to display graphic of random index, chosen from 1,
                                                 ; 1, 2 and 3
       byte 1,7,157,172,1,33
       byte 173,65,33,174,65,33
       byte 175,1,157,176,65,33
       byte 0,9,33,177,1,161
       byte 178,1,161
       byte 255                                  ; End Marker
* Upper body, pushing to the left
       byte 244,2                                ; Set current graphic set to 2
       byte 254,0,1                              ; Change cursor's x- and y-coordinates by +1 and 0 characters respectively and
                                                 ; store as new base coordinates
       byte 250,1,255                            ; Change cursor's x- and y-coordinates by -1 and +1 characters respectively
       byte 236,4,1,1,2,3                        ; Modify following instruction to display graphic of random index, chosen from 1,
                                                 ; 1, 2 and 3
       byte 1,135,160,175,129,161
       byte 174,129,161,173,193,33
       byte 172,129,29,178,129,161
       byte 177,129,161,0,9,33
       byte 176,193,33
       byte 255                                  ; End Marker

* Graphic Layout Data Berk in Action Facing out of screen, bending down (see bugs)
_58119:
       byte 244,2                                ; Set current graphic set to 2
       byte 250,2,1                              ; Change cursor's x- and y-coordinates by +1 and +2 characters respectively
       byte 145,1,33,136,15,33
       byte 136,15,33,145,129,28
       byte 146,1,33,171,65,161
       byte 0,9,33,0,9,33
       byte 171,193,161,146,129,27
       byte 137,65,33,138,65,161
       byte 0,9,33,0,9,33
       byte 138,193,161,137,193,27               ; Fix graphics glitch 65 -> 193
       byte 147,65,33,140,65,161
       byte 45,193,161,45,65,161
       byte 140,193,161,147,193,27
       byte 65,1,33,148,1,33
       byte 62,129,33,62,1,33
       byte 148,129,33,65,129,33
       byte 255                                  ; End Marker
* Facing into screen, bending down
_58209:
       byte 254,0,2                              ; Change cursor's x- and y-coordinates by +2 and 0 characters respectively and
                                                 ; store as new base coordinates
       byte 244,2                                ; Set current graphic set to 2
       byte 251,_57792&>00ff,(_57792&>ff00)/256  ; Process graphic layout data at #R57792 and upon returning, move cursor to base
                                                 ; coordinates
       byte 251,_57767&>00ff,(_57767&>ff00)/256  ; Process graphic layout data at #R57767 and upon returning, move cursor to base
                                                 ; coordinates
       byte 250,1,0                              ; Change cursor's x- and y-coordinates by 0 and +1 characters respectively
       byte 161,1,33,161,129,30
       byte 162,1,33,163,65,33
       byte 163,193,33,162,129,28
       byte 164,1,33,165,65,161
       byte 0,9,33,0,9,33
       byte 165,193,161,164,129,27
       byte 166,65,33,0,9,33
       byte 0,9,33,0,9,33
       byte 0,9,33,166,129,27
       byte 255                                  ; End Marker
* Facing into screen, stretching upwards
_58278:
       byte 244,2                                ; Set current graphic set to 2
       byte 250,253,1                            ; Change cursor's x- and y-coordinates by +1 and -3 characters respectively
       byte 170,1,33,149,1,33
       byte 149,129,33,170,129,29
       byte 150,65,33,151,1,33
       byte 151,129,33,150,129,29
       byte 152,65,33,153,121,33
       byte 153,121,33,152,193,29
       byte 154,1,33,0,9,33
       byte 0,9,33,154,129,29
       byte 6,1,33,0,9,33
       byte 0,9,33,6,129,29
       byte 7,65,33,0,9,33
       byte 0,9,33,7,193,29
       byte 0,9,33,0,9,33
       byte 0,9,33,0,9,29
       byte 27,193,33,0,9,33
       byte 0,9,33,27,193,28
       byte 156,65,33,157,65,33
       byte 125,193,33,125,65,33
       byte 157,193,33,156,193,27
       byte 159,1,33,160,1,35
       byte 160,129,33,159,129,33
       byte 255                                  ; End Marker
* Wings, animated
_58410:
       byte 244,6                                ; Set current graphic set to 6
       byte 243,0,2                              ; Increase current state value n (initially 0), up to maximum of 2, resetting to
                                                 ; zero if maximum reached and jump to n-th address in following list:
       byte _58419&>00ff,(_58419&>ff00)/256      ; #R58419 (wings, raised)
       byte _58516&>00ff,(_58516&>ff00)/256      ; #R58516 (wings, lowered)
* Wings, raised
_58419:
       byte 250,254,254                          ; Change cursor's x- and y-coordinates by -2 and -2 characters respectively
       byte 52,5,33,53,69,33
       byte 54,5,30,34,5,33
       byte 55,69,161,56,69,161
       byte 57,69,29,58,5,33
       byte 59,5,33,60,69,161
       byte 61,69,159,62,69,161
       byte 0,45,32,63,69,32
       byte 64,69,33
       byte 250,251,3                            ; Change cursor's x- and y-coordinates by +3 and -5 characters respectively
       byte 54,133,33,53,197,33
       byte 52,133,29,57,133,33
       byte 56,197,161,55,197,161
       byte 34,133,29,61,197,161
       byte 60,197,161,59,133,33
       byte 58,133,29,0,45,33
       byte 62,197,159,63,197,32
       byte 64,197,33
       byte 255                                  ; End Marker
* Wings, lowered
_58516:
       byte 41,5,29,42,5,33
       byte 43,69,33,44,69,161
       byte 45,69,161,46,69,29
       byte 47,5,33,48,69,33
       byte 49,69,161,0,45,31
       byte 50,5,33,51,69,33
       byte 250,253,3                            ; Change cursor's x- and y-coordinates by +3 and -3 characters respectively
       byte 41,133,31,46,197,33
       byte 45,197,161,44,197,161
       byte 43,197,33,42,133,28
       byte 0,45,33,49,197,161
       byte 48,197,33,47,133,29
       byte 51,197,33,50,133,33
       byte 255                                  ; End Marker
* Facing right, falling, arms forward
_58592:
       byte 244,2                                ; Set current graphic set to 2
       byte 250,2,1                              ; Change cursor's x- and y-coordinates by +1 and +2 characters respectively
       byte 5,1,33,183,1,33
       byte 184,1,33,2,7,28
       byte 6,1,33,0,9,33
       byte 0,9,33,18,1,33
       byte 19,65,33,20,1,33
       byte 21,1,26,7,65,33
       byte 0,9,33,0,9,33
       byte 89,65,161,22,65,161
       byte 23,65,33,24,1,25
       byte 4,1,33,58,65,161
       byte 179,65,33,0,9,33
       byte 43,1,33,182,1,33
       byte 26,1,26,62,1,33
       byte 54,1,33,63,1,33
       byte 180,1,33
       byte 255                                  ; End Marker
* Facing left, falling, arms forward
_58685:
       byte 244,2                                ; Set current graphic set to 2
       byte 250,2,1                              ; Change cursor's x- and y-coordinates by +1 and +2 characters respectively
       byte 2,135,33,184,129,33
       byte 183,129,33,5,129,27
       byte 21,129,33,20,129,33
       byte 19,193,33,18,129,33
       byte 0,9,33,0,9,33
       byte 6,129,26,24,129,33
       byte 23,129,33,22,193,33
       byte 89,193,33,0,9,33
       byte 0,9,33,7,193,27
       byte 26,129,33,182,129,33
       byte 43,129,33,0,9,33
       byte 179,193,33,58,193,33
       byte 4,129,29,180,129,33
       byte 63,129,33,54,129,33
       byte 62,129,33
       byte 255                                  ; End Marker
* Facing right, falling, arms to sides
_58778:
       byte 244,2                                ; Set current graphic set to 2
       byte 250,2,1                              ; Change cursor's x- and y-coordinates by +1 and +2 characters respectively
       byte 188,1,33,189,65,33
       byte 190,65,33,2,7,28
       byte 6,1,33,191,65,161
       byte 192,65,161,193,65,161
       byte 186,1,28,7,65,161
       byte 194,65,161,195,65,161
       byte 0,9,33,187,1,27
       byte 4,1,33,58,65,161
       byte 179,65,33,0,9,33
       byte 43,1,28,62,1,33
       byte 54,1,33,63,1,33
       byte 180,1,33
       byte 255                                  ; End Marker
* Facing left, falling, arms to sides
_58853:
       byte 244,2                                ; Set current graphic set to 2
       byte 250,2,1                              ; Change cursor's x- and y-coordinates by +1 and +2 characters respectively
       byte 2,135,33,190,193,33
       byte 189,193,33,188,193,29
       byte 186,193,33,193,193,33
       byte 192,193,33,191,193,33
       byte 6,129,28,187,129,33
       byte 0,9,33,195,193,33
       byte 194,193,33,7,193,29
       byte 43,129,33,0,9,33
       byte 179,193,33,58,193,33
       byte 4,129,29,180,129,33
       byte 63,129,33,54,129,33
       byte 62,129,33
       byte 255                                  ; End Marker
* Being thrown right
_58928:
       byte 244,2                                ; Set current graphic set to 2
       byte 109,1,34,215,7,33
       byte 215,7,28,110,1,33
       byte 111,65,33,112,65,33
       byte 98,65,161,99,65,161
       byte 186,1,33,109,129,26
       byte 113,1,33,196,65,33
       byte 197,65,161,0,9,33
       byte 0,9,33,198,65,33
       byte 111,193,33,110,129,26
       byte 7,65,33,0,9,33
       byte 0,9,33,0,9,33
       byte 115,193,33,114,1,33
       byte 113,129,25,199,1,33
       byte 74,65,161,0,9,33
       byte 0,9,33,0,9,33
       byte 34,1,27,77,1,33
       byte 71,1,33,200,1,33
       byte 201,1,33,202,65,161
       byte 156,193,31,160,129,33
       byte 159,129,33
       byte 255                                  ; End Marker
* Being thrown left
_59048:
       byte 244,2                                ; Set current graphic set to 2
       byte 250,0,2                              ; Change cursor's x- and y-coordinates by +2 and 0 characters respectively
       byte 215,135,33,215,135,34
       byte 109,129,27,109,1,33
       byte 186,129,33,99,193,33
       byte 98,193,33,112,193,33
       byte 111,193,33,110,129,25
       byte 110,1,33,111,65,33
       byte 198,193,33,0,9,33
       byte 0,9,33,197,193,33
       byte 196,193,33,113,129,25
       byte 113,1,33,114,1,33
       byte 115,65,33,0,9,33
       byte 0,9,33,0,9,33
       byte 7,193,28,34,129,33
       byte 238,3                                ; Set Repeat Counter A to 3
       byte 0,9,33
       byte 239                                  ; Decrement Repeat Counter A and loop back to #R59133 if not zero
       byte 74,193,33,199,129,27
       byte 156,65,33,202,193,33
       byte 201,193,33,200,129,33
       byte 71,129,33,77,129,27
       byte 159,1,33,160,1,33
       byte 255                                  ; End Marker
* Floating / starting to fall, animated
_59168:
       byte 251,_56880&>00ff,(_56880&>ff00)/256  ; Process graphic layout data at #R56880 and upon returning, move cursor to base
                                                 ; coordinates
       byte 251,_59223&>00ff,(_59223&>ff00)/256  ; Process graphic layout data at #R59223 and upon returning, move cursor to base
                                                 ; coordinates
       byte 251,_59231&>00ff,(_59231&>ff00)/256  ; Process graphic layout data at #R59231 and upon returning, move cursor to base
                                                 ; coordinates
       byte 250,5,253                            ; Change cursor's x- and y-coordinates by -3 and +5 characters respectively
       byte 40,132,33,39,161,33
       byte 38,161,33,0,9,33
       byte 0,9,33,38,33,33
       byte 39,33,33,40,4,26
       byte 43,132,33,42,225,33
       byte 61,1,33,61,129,33
       byte 42,33,33,43,4,33
       byte 255                                  ; End Marker
* Right arm, animated
_59223:
       byte 247,3                                ; Jump to one of the 3 addresses in the following list, chosen at random:
       byte _57545&>00ff,(_57545&>ff00)/256      ; #R57545 (right arm)
       byte _57607&>00ff,(_57607&>ff00)/256      ; #R57607 (right arm raised)
       byte _57669&>00ff,(_57669&>ff00)/256      ; #R57669 (right arm, walking into or out of screen)
* Right arm, animated
_59231:
       byte 247,3                                ; Jump to one of the 3 addresses in the following list, chosen at random:
       byte _57576&>00ff,(_57576&>ff00)/256      ; #R57576 (left arm)
       byte _57638&>00ff,(_57638&>ff00)/256      ; #R57638 (left arm raised)
       byte _57703&>00ff,(_57703&>ff00)/256      ; #R57703 (left arm, walking into or out of screen)
* Falling downwards
_59239:
       byte 244,2                                ; Set current graphic set to 2
       byte 250,2,0                              ; Change cursor's x- and y-coordinates by 0 and +2 characters respectively
       byte 251,_57610&>00ff,(_57610&>ff00)/256  ; Process graphic layout data at #R57610 and upon returning, move cursor to base
                                                 ; coordinates
       byte 250,2,5                              ; Change cursor's x- and y-coordinates by +5 and +2 characters respectively
       byte 251,_57641&>00ff,(_57641&>ff00)/256  ; Process graphic layout data at #R57641 and upon returning, move cursor to base
                                                 ; coordinates
       byte 250,2,2                              ; Change cursor's x- and y-coordinates by +2 and +2 characters respectively
       byte 207,1,33,207,129,31
       byte 185,15,33,185,15,31
       byte 98,65,161,99,65,157
       byte 203,1,33,204,65,161
       byte 0,9,33,0,9,33
       byte 204,193,161,203,129,27
       byte 205,1,33,206,65,161
       byte 201,129,33,201,1,33
       byte 206,193,161,205,129,33
       byte 255                                  ; End Marker
* Lying on floor, animated
_59311:
       byte 244,2                                ; Set current graphic set to 2
       byte 250,6,2                              ; Change cursor's x- and y-coordinates by +2 and +6 characters respectively
       byte 251,_59367&>00ff,(_59367&>ff00)/256  ; Process graphic layout data at #R59367 and upon returning, move cursor to base
                                                 ; coordinates
       byte 250,5,0                              ; Change cursor's x- and y-coordinates by 0 and +5 characters respectively
       byte 208,1,33,209,65,161
       byte 183,65,33,183,193,33
       byte 209,193,33,208,129,26
       byte 236,2,210,211                        ; Modify following instruction to display graphic of random index, chosen from
                                                 ; 210 and 211
       byte 210,1,33,212,65,33
       byte 213,65,35,213,193,33
       byte 212,193,33
       byte 236,2,210,211                        ; Modify following instruction to display graphic of random index, chosen from
                                                 ; 210 and 211
       byte 210,129,33
       byte 255                                  ; End Marker
* Stunned eyes, animated
_59367:
       byte 238,2                                ; Set Repeat Counter A to 2
       byte 236,4,91,92,214,215                  ; Modify following instruction to display graphic of random index, chosen from
                                                 ; 91, 92, 214 and 215
       byte 91,15,33
       byte 239                                  ; Decrement Repeat Counter A and loop back to #R59375 if not zero
       byte 255                                  ; End Marker
* Getting up, frame 1, animated
_59380:
       byte 244,2                                ; Set current graphic set to 2
       byte 250,4,2                              ; Change cursor's x- and y-coordinates by +2 and +4 characters respectively
       byte 251,_59367&>00ff,(_59367&>ff00)/256  ; Process graphic layout data at #R59367 and upon returning, move cursor to base
                                                 ; coordinates
       byte 250,3,2                              ; Change cursor's x- and y-coordinates by +2 and +3 characters respectively
       byte 207,1,33,207,129,30
       byte 100,1,35,100,129,26
       byte 116,1,33,117,1,33
       byte 118,65,33,119,65,161
       byte 98,65,161,99,65,161
       byte 119,193,33,118,193,33
       byte 117,129,33,116,129,23
       byte 120,1,33,121,1,33
       byte 122,1,33,216,65,33
       byte 125,65,33,125,193,33
       byte 216,193,33,122,129,33
       byte 121,129,33,120,129,33
       byte 255                                  ; End Marker
* Getting up, frame 2 / banging head
_59464:
       byte 244,2                                ; Set current graphic set to 2
       byte 250,1,0                              ; Change cursor's x- and y-coordinates by 0 and +1 characters respectively
       byte 251,_57610&>00ff,(_57610&>ff00)/256  ; Process graphic layout data at #R57610 and upon returning, move cursor to base
                                                 ; coordinates
       byte 250,1,5                              ; Change cursor's x- and y-coordinates by +5 and +1 characters respectively
       byte 251,_57641&>00ff,(_57641&>ff00)/256  ; Process graphic layout data at #R57641 and upon returning, move cursor to base
                                                 ; coordinates
       byte 250,1,2                              ; Change cursor's x- and y-coordinates by +2 and +1 characters respectively
       byte 207,1,33,207,129,31
       byte 214,15,33,214,15,31
       byte 94,65,161,95,65,159
       byte 0,9,33,0,9,29
       byte 4,1,33,48,65,161
       byte 49,65,161,49,193,161
       byte 48,193,161,4,129,27
       byte 53,1,33,54,1,33
       byte 53,129,33,53,1,33
       byte 54,129,33,53,129,33
       byte 255                                  ; End Marker

* Script Data Drutt Facing Out of Screen (Falling)
_51520:
       byte _52371&>00ff,(_52371&>ff00)/256      ; #R52371 (Drutt, facing out of screen, fully animated)
       byte 43,0                                 ; Select next action for Drutt depending upon control input

* Script Data Drutt Facing Out of Screen
drutt_facing_out_script:
       byte _52379&>00ff,(_52379&>ff00)/256      ; #R52379 (Drutt, facing out of screen, legs bent, eyes and mouth animated)
       byte _52392&>00ff,(_52392&>ff00)/256      ; #R52392 (Drutt, facing out of screen, legs partially extended, eyes and mouth animated)
       byte _52392&>00ff,(_52392&>ff00)/256      ; #R52392 (Drutt, facing out of screen, legs partially extended, eyes and mouth animated)
       byte _52379&>00ff,(_52379&>ff00)/256      ; #R52379 (Drutt, facing out of screen, legs bent, eyes and mouth animated)
       byte _52392&>00ff,(_52392&>ff00)/256      ; #R52392 (Drutt, facing out of screen, legs partially extended, eyes and mouth animated)
       byte _52392&>00ff,(_52392&>ff00)/256      ; #R52392 (Drutt, facing out of screen, legs partially extended, eyes and mouth animated)
       byte 43,0                                 ; Select next action for Drutt depending upon control input

* Script Data Move Drutt and Any Pushed Entity Right By a Hop of Size Four
*
* If Drutt is not pushing anything, then he will hop right by four characters. If he is pushing something, then
* Drutt and the pushed entity will move right in alternate steps, traversing half the distance (two characters) on
* average.
_51538:
       byte 12,0                                 ; Set Drutt's Walking Right Flag
       byte _52442&>00ff,(_52442&>ff00)/256      ; #R52442 (Drutt, facing right, legs bent)
       byte 47,0                                 ; Move Drutt, or entity he is pushing right one character and start pushed entity falling if
                                                 ; appropriate
       byte _52460&>00ff,(_52460&>ff00)/256      ; #R52460 (Drutt, facing right, legs extended back, jumping)
       byte 47,0                                 ; Move Drutt, or entity he is pushing right one character and start pushed entity falling if
                                                 ; appropriate
       byte _52476&>00ff,(_52476&>ff00)/256      ; #R52476 (Drutt, facing right, legs bent, airborne)
       byte 47,0                                 ; Move Drutt, or entity he is pushing right one character and start pushed entity falling if
                                                 ; appropriate
       byte _52489&>00ff,(_52489&>ff00)/256      ; #R52489 (Drutt, facing right, legs bent, landing)
       byte 47,0                                 ; Move Drutt, or entity he is pushing right one character and start pushed entity falling if
                                                 ; appropriate
       byte 4,0,9,0                              ; If current character and target entity are in the same room then set pending sound to 9
                                                 ; (Drutt hopping)
       byte 43,0                                 ; Select next action for Drutt depending upon control input

* Script Data Move Drutt and Any Pushed Entity Right By a Hop of Size Three
*
* If Drutt is not pushing anything, then he will hop right by three characters. If he is pushing something, then
* Drutt and the pushed entity will move right in alternate steps, traversing half the distance (one and a half
* characters) on average.
_51562:
       byte 12,0                                 ; Set Drutt's Walking Right Flag
       byte _52442&>00ff,(_52442&>ff00)/256      ; #R52442 (Drutt, facing right, legs bent)
       byte 47,0                                 ; Move Drutt, or entity he is pushing right one character and start pushed entity falling if
                                                 ; appropriate
       byte _52460&>00ff,(_52460&>ff00)/256      ; #R52460 (Drutt, facing right, legs extended back, jumping)
       byte 47,0                                 ; Move Drutt, or entity he is pushing right one character and start pushed entity falling if
                                                 ; appropriate
       byte _52476&>00ff,(_52476&>ff00)/256      ; #R52476 (Drutt, facing right, legs bent, airborne)
       byte 47,0                                 ; Move Drutt, or entity he is pushing right one character and start pushed entity falling if
                                                 ; appropriate
       byte _52489&>00ff,(_52489&>ff00)/256      ; #R52489 (Drutt, facing right, legs bent, landing)
       byte 4,0,9,0                              ; If current character and target entity are in the same room then set pending sound to 9
                                                 ; (Drutt hopping)
       byte 43,0                                 ; Select next action for Drutt depending upon control input

* Script Data Move Drutt and Any Pushed Entity Left By a Hop of Size Four
*
* If Drutt is not pushing anything, then he will hop left by four characters. If he is pushing something, then Drutt
* and the pushed entity will move left in alternate steps, traversing half the distance (two characters) on average.
_51584:
       byte 11,0                                 ; Set Drutt's Walking Left Flag
       byte _52523&>00ff,(_52523&>ff00)/256      ; #R52523 (Drutt, facing left, legs bent)
       byte 46,0                                 ; Move Drutt, or entity he is pushing left one character and start pushed entity falling if
                                                 ; appropriate
       byte _52541&>00ff,(_52541&>ff00)/256      ; #R52541 (Drutt, facing left, legs extended back, jumping)
       byte 46,0                                 ; Move Drutt, or entity he is pushing left one character and start pushed entity falling if
                                                 ; appropriate
       byte _52557&>00ff,(_52557&>ff00)/256      ; #R52557 (Drutt, facing left, legs bent, airborne)
       byte 46,0                                 ; Move Drutt, or entity he is pushing left one character and start pushed entity falling if
                                                 ; appropriate
       byte _52570&>00ff,(_52570&>ff00)/256      ; #R52570 (Drutt, facing left, legs bent, landing)
       byte 46,0                                 ; Move Drutt, or entity he is pushing left one character and start pushed entity falling if
                                                 ; appropriate
       byte 4,0,9,0                              ; If current character and target entity are in the same room then set pending sound to 9
                                                 ; (Drutt hopping)
       byte 43,0                                 ; Select next action for Drutt depending upon control input

* Script Data Move Drutt and Any Pushed Entity Left By a Hop of Size Three
*
* If Drutt is not pushing anything, then he will hop left by three characters. If he is pushing something, then
* Drutt and the pushed entity will move left in alternate steps, traversing half the distance (one and a half
* characters) on average.
_51608:
       byte 11,0                                 ; Set Drutt's Walking Left Flag
       byte _52523&>00ff,(_52523&>ff00)/256      ; #R52523 (Drutt, facing left, legs bent)
       byte 46,0                                 ; Move Drutt, or entity he is pushing left one character and start pushed entity falling if
                                                 ; appropriate
       byte _52541&>00ff,(_52541&>ff00)/256      ; #R52541 (Drutt, facing left, legs extended back, jumping)
       byte 46,0                                 ; Move Drutt, or entity he is pushing left one character and start pushed entity falling if
                                                 ; appropriate
       byte _52557&>00ff,(_52557&>ff00)/256      ; #R52557 (Drutt, facing left, legs bent, airborne)
       byte 46,0                                 ; Move Drutt, or entity he is pushing left one character and start pushed entity falling if
                                                 ; appropriate
       byte _52570&>00ff,(_52570&>ff00)/256      ; #R52570 (Drutt, facing left, legs bent, landing)
       byte 4,0,9,0                              ; If current character and target entity are in the same room then set pending sound to 9
                                                 ; (Drutt hopping)
       byte 43,0                                 ; Select next action for Drutt depending upon control input

* Script Data Drutt Swapping Depth Levels
_51630:
       byte 10,0                                 ; Reset Drutt's Walking Left and Walking Right flags
       byte _52379&>00ff,(_52379&>ff00)/256      ; #R52379 (Drutt, facing out of screen, legs bent, eyes and mouth animated)
       byte 44,0                                 ; Move Drutt up two characters...
       byte 44,0                                 ; ...
       byte _52417&>00ff,(_52417&>ff00)/256      ; #R52417 (Drutt, facing out of screen, legs fully extended, eyes and mouth animated)
       byte 44,0                                 ; Move Drutt up two characters...
       byte 44,0                                 ; ...
       byte _52417&>00ff,(_52417&>ff00)/256      ; #R52417 (Drutt, facing out of screen, legs fully extended, eyes and mouth animated)
       byte 44,0                                 ; Move Drutt up one character
       byte 51,0                                 ; Swap Drutt's current depth level if possible
       byte _52417&>00ff,(_52417&>ff00)/256      ; #R52417 (Drutt, facing out of screen, legs fully extended, eyes and mouth animated)
       byte 45,0                                 ; Move Drutt down one character
       byte _52417&>00ff,(_52417&>ff00)/256      ; #R52417 (Drutt, facing out of screen, legs fully extended, eyes and mouth animated)
       byte 45,0                                 ; Move Drutt down two characters...
       byte 45,0                                 ; ...
       byte _52417&>00ff,(_52417&>ff00)/256      ; #R52417 (Drutt, facing out of screen, legs fully extended, eyes and mouth animated)
       byte 45,0                                 ; Move Drutt down two characters...
       byte 45,0                                 ; ...
       byte _52379&>00ff,(_52379&>ff00)/256      ; #R52379 (Drutt, facing out of screen, legs bent, eyes and mouth animated)
       byte 4,0,9,0                              ; If current character and target entity are in the same room then set pending sound to 9
                                                 ; (Drutt hopping)
       byte 43,0                                 ; Select next action for Drutt depending upon control input

* Script Data Drutt Jumping
*
* Drutt Starting to Jump Straight Up
_51674:
       byte 10,0                                 ; Reset Drutt's Walking Left and Walking Right flags
       byte _52379&>00ff,(_52379&>ff00)/256      ; #R52379 (Drutt, facing out of screen, legs bent, eyes and mouth animated)
_51678:
       byte _52371&>00ff,(_52371&>ff00)/256      ; #R52371 (Drutt, facing out of screen, fully animated)
       byte 50,0                                 ; Advance Drutt's jump and select next phase if current phase complete
       byte 1,0,_51678&>00ff,(_51678&>ff00)/256  ; Jump to #R51678
* Drutt Jumping Left
_51686:
       byte 11,0                                 ; Set Drutt's Walking Left Flag
       byte _52541&>00ff,(_52541&>ff00)/256      ; #R52541 (Drutt, facing left, legs extended back, jumping)
       byte 50,0                                 ; Advance Drutt's jump and select next phase if current phase complete
       byte 1,0,_51686&>00ff,(_51686&>ff00)/256  ; Jump to #R51686
* Drutt Jumping Right
_51696:
       byte 12,0                                 ; Set Drutt's Walking Right Flag
       byte _52460&>00ff,(_52460&>ff00)/256      ; #R52460 (Drutt, facing right, legs extended back, jumping)
       byte 50,0                                 ; Advance Drutt's jump and select next phase if current phase complete
       byte 1,0,_51696&>00ff,(_51696&>ff00)/256  ; Jump to #R51696

* Script Data Drutt Eating a Worm
_51706:
       byte _52677&>00ff,(_52677&>ff00)/256      ; #R52677 (Drutt, facing out of screen, legs partially extended, eating a worm, animated)
       byte _52677&>00ff,(_52677&>ff00)/256      ; #R52677 (Drutt, facing out of screen, legs partially extended, eating a worm, animated)
       byte _52677&>00ff,(_52677&>ff00)/256      ; #R52677 (Drutt, facing out of screen, legs partially extended, eating a worm, animated)
       byte _52677&>00ff,(_52677&>ff00)/256      ; #R52677 (Drutt, facing out of screen, legs partially extended, eating a worm, animated)
       byte _52677&>00ff,(_52677&>ff00)/256      ; #R52677 (Drutt, facing out of screen, legs partially extended, eating a worm, animated)
       byte _52677&>00ff,(_52677&>ff00)/256      ; #R52677 (Drutt, facing out of screen, legs partially extended, eating a worm, animated)
       byte 4,0,8,0                              ; If current character and target entity are in the same room then set pending sound to 8
                                                 ; (Drutt eating a worm)
       byte _52648&>00ff,(_52648&>ff00)/256      ; #R52648 (Drutt, facing out of screen, smiling, legs partially extended, eyes blinking)
       byte _52648&>00ff,(_52648&>ff00)/256      ; #R52648 (Drutt, facing out of screen, smiling, legs partially extended, eyes blinking)
       byte _52648&>00ff,(_52648&>ff00)/256      ; #R52648 (Drutt, facing out of screen, smiling, legs partially extended, eyes blinking)
       byte _52648&>00ff,(_52648&>ff00)/256      ; #R52648 (Drutt, facing out of screen, smiling, legs partially extended, eyes blinking)
       byte 43,0                                 ; Select next action for Drutt depending upon control input

* Graphic Layout Data Drutt Facing out of screen, fully animated, jumping / falling / held by Berk
_52371:
       byte 247,3                                ; Jump to one of the 3 addresses in the following list, chosen at random:
       byte _52379&>00ff,(_52379&>ff00)/256      ; #R52379 (facing out of screen, legs bent, eyes and mouth animated)
       byte _52395&>00ff,(_52395&>ff00)/256      ; #R52395 (facing out of screen, legs partially extended, eyes and mouth animated)
       byte _52417&>00ff,(_52417&>ff00)/256      ; #R52417 (facing out of screen, legs fully extended, eyes and mouth animated)
* Facing out of screen, legs bent, eyes and mouth animated
_52379:
       byte 251,_52604&>00ff,(_52604&>ff00)/256  ; Process graphic layout data at #R52604 and upon returning, move cursor to base
                                                 ; coordinates
       byte 250,0,255                            ; Change cursor's x- and y-coordinates by -1 and 0 characters respectively
       byte 45,6,34,45,134,33
       byte 255                                  ; End Marker
* Facing out of screen, legs partially extended, eyes and mouth animated
_52392:
       byte 254,255,0                            ; Change cursor's x- and y-coordinates by 0 and -1 characters respectively and
                                                 ; store as new base coordinates
_52395:
       byte 251,_52604&>00ff,(_52604&>ff00)/256  ; Process graphic layout data at #R52604 and upon returning, move cursor to base
                                                 ; coordinates
       byte 250,0,255                            ; Change cursor's x- and y-coordinates by -1 and 0 characters respectively
       byte 38,6,34,38,134,30
       byte 46,6,33,47,6,33
       byte 46,134,33
       byte 255                                  ; End Marker
* Facing out of screen, legs fully extended, eyes and mouth animated
_52417:
       byte 251,_52604&>00ff,(_52604&>ff00)/256  ; Process graphic layout data at #R52604 and upon returning, move cursor to base
                                                 ; coordinates
       byte 250,0,255                            ; Change cursor's x- and y-coordinates by -1 and 0 characters respectively
       byte 38,6,34,38,134,30
       byte 58,6,33,56,6,33
       byte 58,134,31,57,6,33
       byte 255                                  ; End Marker
* Facing right, legs bent
_52442:
       byte 244,7                                ; Set current graphic set to 7
       byte 250,255,0                            ; Change cursor's x- and y-coordinates by 0 and -1 characters respectively
       byte 48,7,31,38,6,33
       byte 49,6,161,50,6,33
       byte 255                                  ; End Marker
* Facing right, legs extended back (jumping)
_52460:
       byte 254,255,0                            ; Change cursor's x- and y-coordinates by 0 and -1 characters respectively and
                                                 ; store as new base coordinates
       byte 251,_52505&>00ff,(_52505&>ff00)/256  ; Process graphic layout data at #R52505 and upon returning, move cursor to base
                                                 ; coordinates
       byte 250,1,255                            ; Change cursor's x- and y-coordinates by -1 and +1 characters respectively
       byte 51,6,33,52,6,33
       byte 255                                  ; End Marker
* Facing right, legs bent, airborne
_52476:
       byte 254,254,0                            ; Change cursor's x- and y-coordinates by 0 and -2 characters respectively and
                                                 ; store as new base coordinates
       byte 251,_52505&>00ff,(_52505&>ff00)/256  ; Process graphic layout data at #R52505 and upon returning, move cursor to base
                                                 ; coordinates
       byte 250,1,0                              ; Change cursor's x- and y-coordinates by 0 and +1 characters respectively
       byte 53,6,33
       byte 255                                  ; End Marker
* Facing right, legs bent, landing
_52489:
       byte 254,255,0                            ; Change cursor's x- and y-coordinates by 0 and -1 characters respectively and
                                                 ; store as new base coordinates
       byte 251,_52505&>00ff,(_52505&>ff00)/256  ; Process graphic layout data at #R52505 and upon returning, move cursor to base
                                                 ; coordinates
       byte 250,1,0                              ; Change cursor's x- and y-coordinates by 0 and +1 characters respectively
       byte 54,6,33,55,6,33
       byte 255                                  ; End Marker
* Body, facing right
_52505:
       byte 244,7                                ; Set current graphic set to 7
       byte 250,255,0                            ; Change cursor's x- and y-coordinates by 0 and -1 characters respectively
       byte 48,7,31,38,6,33
       byte 0,54,33,38,134,33
       byte 255                                  ; End Marker
* Facing left, legs bent
_52523:
       byte 244,7                                ; Set current graphic set to 7
       byte 250,255,0                            ; Change cursor's x- and y-coordinates by 0 and -1 characters respectively
       byte 48,135,31,50,134,33
       byte 49,134,161,38,134,33
       byte 255                                  ; End Marker
* Facing left, legs extended back (jumping)
_52541:
       byte 254,255,0                            ; Change cursor's x- and y-coordinates by 0 and -1 characters respectively and
                                                 ; store as new base coordinates
       byte 251,_52586&>00ff,(_52586&>ff00)/256  ; Process graphic layout data at #R52586 and upon returning, move cursor to base
                                                 ; coordinates
       byte 250,1,0                              ; Change cursor's x- and y-coordinates by 0 and +1 characters respectively
       byte 52,134,33,51,134,33
       byte 255                                  ; End Marker
* Facing left, legs bent, airborne
_52557:
       byte 254,254,0                            ; Change cursor's x- and y-coordinates by 0 and -2 characters respectively and
                                                 ; store as new base coordinates
       byte 251,_52586&>00ff,(_52586&>ff00)/256  ; Process graphic layout data at #R52586 and upon returning, move cursor to base
                                                 ; coordinates
       byte 250,1,0                              ; Change cursor's x- and y-coordinates by 0 and +1 characters respectively
       byte 53,134,33
       byte 255                                  ; End Marker
* Facing left, legs bent, landing
_52570:
       byte 254,255,0                            ; Change cursor's x- and y-coordinates by 0 and -1 characters respectively and
                                                 ; store as new base coordinates
       byte 251,_52586&>00ff,(_52586&>ff00)/256  ; Process graphic layout data at #R52586 and upon returning, move cursor to base
                                                 ; coordinates
       byte 250,1,255                            ; Change cursor's x- and y-coordinates by -1 and +1 characters respectively
       byte 55,134,33,54,134,33
       byte 255                                  ; End Marker
* Body, facing left
_52586:
       byte 244,7                                ; Set current graphic set to 7
       byte 250,255,0                            ; Change cursor's x- and y-coordinates by 0 and -1 characters respectively
       byte 48,135,31,38,6,33
       byte 0,54,33,38,134,33
       byte 255                                  ; End Marker
* Mouth and eyes (animated)
_52604:
       byte 244,7                                ; Set current graphic set to 7
       byte 236,3,39,40,41                       ; Modify following instruction to display graphic of random index, chosen from 39,
                                                 ; 40 and 41
       byte 0,48,161
       byte 250,255,254                          ; Change cursor's x- and y-coordinates by -2 and -1 characters respectively
       byte 249,2,0                              ; If state n (initially 1) has remaining time of zero then reset its time to
                                                 ; maximum and randomly select a new state, n, from the 2 in the following list.
                                                 ; Jump to the address specified in the current state and decrease its remaining
                                                 ; time:
       byte 2,4,_52628&>00ff,(_52628&>ff00)/256  ; #R52628 (eyes, open, facing out of screen, for 4 ticks)
       byte 1,2,_52638&>00ff,(_52638&>ff00)/256  ; #R52638 (eyes, closed, facing out of screen, for 2 ticks)
* Eyes (Open, Facing Out of Screen)
_52628:
       byte 37,7,33,35,7,33
       byte 37,135,33
       byte 255                                  ; End Marker
* Eyes (Closed, Facing Out of Screen)
_52638:
       byte 37,6,33,36,6,33
       byte 37,134,33
       byte 255                                  ; End Marker
* Facing out of screen, smiling, legs partially extended, eyes blinking
_52648:
       byte 244,7                                ; Set current graphic set to 7
       byte 250,255,255                          ; Change cursor's x- and y-coordinates by -1 and -1 characters respectively
       byte 38,6,33,42,48,161
       byte 38,134,30,46,6,34
       byte 46,134,33
       byte 250,254,253                          ; Change cursor's x- and y-coordinates by -3 and -2 characters respectively
       byte 247,2                                ; Jump to one of the 2 addresses in the following list, chosen at random:
       byte _52628&>00ff,(_52628&>ff00)/256      ; #R52628 (eyes, open, facing out of screen)
       byte _52638&>00ff,(_52638&>ff00)/256      ; #R52638 (eyes, closed, facing out of screen)
* Facing out of screen, legs partially extended, eating a worm (animated)
_52677:
       byte 251,_52648&>00ff,(_52648&>ff00)/256  ; Process graphic layout data at #R52648 and upon returning, move cursor to base
                                                 ; coordinates
       byte 250,255,0                            ; Change cursor's x- and y-coordinates by 0 and -1 characters respectively
       byte 236,2,43,44                          ; Modify following instruction to display graphic of random index, chosen from 43
                                                 ; and 44
       byte 0,48,160
       byte 243,1,6                              ; Increase current state value n (initially 1), up to maximum of 6, resetting to
                                                 ; zero if maximum reached and jump to n-th address in following list:
       byte _52705&>00ff,(_52705&>ff00)/256      ; #R52705 (worm facing left, curved up into Drutt's mouth)
       byte _52715&>00ff,(_52715&>ff00)/256      ; #R52715 (worm facing right, curved up into Drutt's mouth)
       byte _52705&>00ff,(_52705&>ff00)/256      ; #R52705 (worm facing left, curved up into Drutt's mouth)
       byte _52715&>00ff,(_52715&>ff00)/256      ; #R52715 (worm facing right, curved up into Drutt's mouth)
       byte _52722&>00ff,(_52722&>ff00)/256      ; #R52722 (worm's eyes facing out of screen)
       byte _52722&>00ff,(_52722&>ff00)/256      ; #R52722 (worm's eyes facing out of screen)
* Worm facing left, curved up into Drutt's mouth
_52705:
       byte 250,0,255                            ; Change cursor's x- and y-coordinates by -1 and 0 characters respectively
       byte 7,7,33,59,3,33
       byte 255                                  ; End Marker
* Worm facing right, curved up into Drutt's mouth
_52715:
       byte 59,131,33,7,135,33
       byte 255                                  ; End Marker
* Worm's eyes facing out of screen
_52722:
       byte 34,7,33
       byte 255                                  ; End Marker

* Script Data Worm
*
* Unused
_52729:
       byte _53340&>00ff,(_53340&>ff00)/256      ; #R53340 (Worm looking ahead, blinking)
       byte 1,0,_52729&>00ff,(_52729&>ff00)/256  ; Jump to #R52729
* Worm Rising from Floor then Choosing Next Direction
_52735:
       byte _53340&>00ff,(_53340&>ff00)/256      ; #R53340 (Worm looking ahead, blinking)
       byte _53340&>00ff,(_53340&>ff00)/256      ; #R53340 (Worm looking ahead, blinking)
       byte 34,0                                 ; Move worm up one character
       byte _53340&>00ff,(_53340&>ff00)/256      ; #R53340 (Worm looking ahead, blinking)
       byte _53340&>00ff,(_53340&>ff00)/256      ; #R53340 (Worm looking ahead, blinking)
       byte 34,0                                 ; Move worm up one character
* Choosing Next Direction
_52747:
       byte _53358&>00ff,(_53358&>ff00)/256      ; #R53358 (Worm looking left, normal)
       byte _53358&>00ff,(_53358&>ff00)/256      ; #R53358 (Worm looking left, normal)
       byte _53358&>00ff,(_53358&>ff00)/256      ; #R53358 (Worm looking left, normal)
       byte _53340&>00ff,(_53340&>ff00)/256      ; #R53340 (Worm looking ahead, blinking)
       byte _53373&>00ff,(_53373&>ff00)/256      ; #R53373 (Worm looking right, normal)
       byte _53373&>00ff,(_53373&>ff00)/256      ; #R53373 (Worm looking right, normal)
       byte _53373&>00ff,(_53373&>ff00)/256      ; #R53373 (Worm looking right, normal)
       byte _53340&>00ff,(_53340&>ff00)/256      ; #R53340 (Worm looking ahead, blinking)
       byte 55,0                                 ; Choose new worm direction and start crawling
* Crawling Left
_52765:
       byte 53,0                                 ; Move worm left if possible, otherwise jump to #R52747 (choose new direction)
       byte _53462&>00ff,(_53462&>ff00)/256      ; #R53462 (Worm crawling left, frame 1 / 2)
       byte _53462&>00ff,(_53462&>ff00)/256      ; #R53462 (Worm crawling left, frame 1 / 2)
       byte _53477&>00ff,(_53477&>ff00)/256      ; #R53477 (Worm crawling left, frame 2 / 2)
       byte _53477&>00ff,(_53477&>ff00)/256      ; #R53477 (Worm crawling left, frame 2 / 2)
       byte 52,0                                 ; Increase worm's age and decrease Time Until Direction Change or start fleeing if Drutt is
                                                 ; nearby
       byte 1,0,_52765&>00ff,(_52765&>ff00)/256  ; Jump to #R52765
* Crawling Right
_52781:
       byte 54,0                                 ; Move worm right if possible, otherwise jump to #R52747 (choose new direction)
       byte _53525&>00ff,(_53525&>ff00)/256      ; #R53525 (Worm crawling right, frame 1 / 2)
       byte _53525&>00ff,(_53525&>ff00)/256      ; #R53525 (Worm crawling right, frame 1 / 2)
       byte _53501&>00ff,(_53501&>ff00)/256      ; #R53501 (Worm crawling right, frame 2 / 2)
       byte _53501&>00ff,(_53501&>ff00)/256      ; #R53501 (Worm crawling right, frame 2 / 2)
       byte 52,0                                 ; Increase worm's age and decrease Time Until Direction Change or start fleeing if Drutt is
                                                 ; nearby
       byte 1,0,_52781&>00ff,(_52781&>ff00)/256  ; Jump to #R52781
* Fleeing Left
_52797:
       byte _53403&>00ff,(_53403&>ff00)/256      ; #R53403 (Worm looking right, alarmed)
       byte _53403&>00ff,(_53403&>ff00)/256      ; #R53403 (Worm looking right, alarmed)
       byte _53403&>00ff,(_53403&>ff00)/256      ; #R53403 (Worm looking right, alarmed)
       byte _53403&>00ff,(_53403&>ff00)/256      ; #R53403 (Worm looking right, alarmed)
_52805:
       byte 53,0                                 ; Move worm left if possible, otherwise jump to #R52747 (choose new direction)
       byte _53454&>00ff,(_53454&>ff00)/256      ; #R53454 (Worm crawling left, alarmed, frame 1 / 2)
       byte _53489&>00ff,(_53489&>ff00)/256      ; #R53489 (Worm crawling left, alarmed, frame 2 / 2)
       byte 52,0                                 ; Increase worm's age and decrease Time Until Direction Change or continue fleeing if Drutt
                                                 ; is nearby
       byte 1,0,_52805&>00ff,(_52805&>ff00)/256  ; Jump to #R52805
* Fleeing Right
_52817:
       byte _53388&>00ff,(_53388&>ff00)/256      ; #R53388 (Worm looking left, alarmed)
       byte _53388&>00ff,(_53388&>ff00)/256      ; #R53388 (Worm looking left, alarmed)
       byte _53388&>00ff,(_53388&>ff00)/256      ; #R53388 (Worm looking left, alarmed)
       byte _53388&>00ff,(_53388&>ff00)/256      ; #R53388 (Worm looking left, alarmed)
_52825:
       byte 54,0                                 ; Move worm right if possible, otherwise jump to #R52747 (choose new direction)
       byte _53543&>00ff,(_53543&>ff00)/256      ; #R53543 (Worm crawling right, alarmed, frame 1 / 2)
       byte _53513&>00ff,(_53513&>ff00)/256      ; #R53513 (Worm crawling right, alarmed, frame 2 / 2)
       byte 52,0                                 ; Increase worm's age and decrease Time Until Direction Change or continue fleeing if Drutt
                                                 ; is nearby
       byte 1,0,_52825&>00ff,(_52825&>ff00)/256  ; Jump to #R52825

* Graphic Layout Data Worm Looking ahead, animated
_53340:
       byte 244,7                                ; Set current graphic set to 7
       byte 250,254,1                            ; Change cursor's x- and y-coordinates by +1 and -2 characters respectively
       byte 251,_53561&>00ff,(_53561&>ff00)/256  ; Process graphic layout data at #R53561 and upon returning, move cursor to base
                                                 ; coordinates
       byte 250,255,1                            ; Change cursor's x- and y-coordinates by +1 and -1 characters respectively
       byte 3,3,32,4,3,33
       byte 255                                  ; End Marker
* Looking left, normal
_53358:
       byte 244,7                                ; Set current graphic set to 7
       byte 250,255,0                            ; Change cursor's x- and y-coordinates by 0 and -1 characters respectively
       byte 5,7,33,6,3,32
       byte 4,3,33
       byte 255                                  ; End Marker
* Looking right, normal
_53373:
       byte 244,7                                ; Set current graphic set to 7
       byte 250,255,1                            ; Change cursor's x- and y-coordinates by +1 and -1 characters respectively
       byte 6,131,33,5,135,31
       byte 4,3,33
       byte 255                                  ; End Marker
* Looking left, alarmed
_53388:
       byte 244,7                                ; Set current graphic set to 7
       byte 250,255,0                            ; Change cursor's x- and y-coordinates by 0 and -1 characters respectively
       byte 7,7,33,6,3,32
       byte 4,3,33
       byte 255                                  ; End Marker
* Looking right, alarmed
_53403:
       byte 244,7                                ; Set current graphic set to 7
       byte 250,255,1                            ; Change cursor's x- and y-coordinates by +1 and -1 characters respectively
       byte 6,131,33,7,135,31
       byte 4,3,33
       byte 255                                  ; End Marker
* Unused
       byte 244,7                                ; Set current graphic set to 7
       byte 250,254,1                            ; Change cursor's x- and y-coordinates by +1 and -2 characters respectively
       byte 1,7,32,3,3,32
       byte 8,3,32,9,3,33
       byte 255                                  ; End Marker
* Unused
       byte 244,7                                ; Set current graphic set to 7
       byte 250,254,1                            ; Change cursor's x- and y-coordinates by +1 and -2 characters respectively
       byte 1,7,32,3,3,31
       byte 9,131,33,8,131,33
       byte 255                                  ; End Marker
* Crawling Left, Alarmed (Frame 1 / 2)
_53454:
       byte 244,7                                ; Set current graphic set to 7
       byte 7,7,33
       byte 248,_53464&>00ff,(_53464&>ff00)/256  ; Jump to #R53464
* Crawling Left (Frame 1 / 2)
_53462:
       byte 244,7                                ; Set current graphic set to 7
_53464:
       byte 5,7,33,10,3,33
       byte 10,3,33,9,3,33
       byte 255                                  ; End Marker
* Crawling Left (Frame 2 / 2)
_53477:
       byte 244,7                                ; Set current graphic set to 7
       byte 5,7,33,11,3,33
       byte 9,3,33
       byte 255                                  ; End Marker
* Crawling Left, Alarmed (Frame 2 / 2)
_53489:
       byte 244,7                                ; Set current graphic set to 7
       byte 7,7,33,11,3,33
       byte 9,3,33
       byte 255                                  ; End Marker
* Crawling Right (Frame 2 / 2)
_53501:
       byte 244,7                                ; Set current graphic set to 7
       byte 9,131,33,11,131,33
       byte 5,135,33
       byte 255                                  ; End Marker
* Worm Crawling Right, Alarmed (Frame 2 / 2)
_53513:
       byte 244,7                                ; Set current graphic set to 7
       byte 9,131,33,11,131,33
       byte 7,135,33
       byte 255                                  ; End Marker
* Crawling Right (Frame 1 / 2)
_53525:
       byte 244,7                                ; Set current graphic set to 7
       byte 250,0,255                            ; Change cursor's x- and y-coordinates by -1 and 0 characters respectively
       byte 9,131,33,10,131,33
       byte 10,131,33,5,135,33
       byte 255                                  ; End Marker
* Crawling Right, Alarmed (Frame 1 / 2)
_53543:
       byte 244,7                                ; Set current graphic set to 7
       byte 250,0,255                            ; Change cursor's x- and y-coordinates by -1 and 0 characters respectively
       byte 9,131,33,10,131,33
       byte 10,131,33,7,135,33
       byte 255                                  ; End Marker
* Eyes, looking ahead, animated
_53561:
       byte 247,3                                ; Jump to one of the 3 addresses in the following list, chosen at random:
       byte _53569&>00ff,(_53569&>ff00)/256      ; #R53569 (eyes, looking ahead, open)
       byte _53569&>00ff,(_53569&>ff00)/256      ; #R53569 (eyes, looking ahead, open)
       byte _53573&>00ff,(_53573&>ff00)/256      ; #R53573 (eyes, looking ahead, closed)
* Eyes, looking ahead, open
_53569:
       byte 1,7,33
       byte 255                                  ; End Marker
* Eyes, looking ahead, closed
_53573:
       byte 2,3,33
       byte 255                                  ; End Marker

* Graphic Layout Data Miscellaneous Part 2 Key
_50792:
       byte 244,4                                ; Set current graphic set to 4
       byte 19,7,33
       byte 20,7,33
_50800:
       byte 255                                  ; End Marker

* Door
_50680:
       byte 251,_50701&>00ff,(_50701&>ff00)/256  ; Process graphic layout data at #R50701 and upon returning,
                                                 ; move cursor to base coordinates
       byte 244,4                                ; Set current graphic set to 4
       byte 250,251,3                            ; Change cursor's x- and y-coordinates by +3 and -5
                                                 ; characters respectively
       byte 21,6,33,21,134,31
       byte 22,6,33,22,134,33
       byte 255                                  ; End Marker
* Door (Common)
_50701:
       byte 238,9                                ; Set Repeat Counter A to 9
       byte 251,_50711&>00ff,(_50711&>ff00)/256  ; Process graphic layout data at #R50711 and upon returning,
                                                 ; move cursor to base coordinates
       byte 254,1,0                              ; Change cursor's x- and y-coordinates by 0 and +1
                                                 ; characters respectively and store as new base coordinates
       byte 239                                  ; Decrement Repeat Counter A and loop back to #R50703 if not
                                                 ; zero
       byte 255                                  ; End Marker
* Door Patterns
_50711:
       byte 242,5                                ; Set current attribute to 5
       byte 243,0,4                              ; Increase current state value n (initially 0), up to
                                                 ; maximum of 4, resetting to zero if maximum reached and
                                                 ; jump to n-th address in following list:
       byte _50724&>00ff,(_50724&>ff00)/256      ; #R50724
       byte _50741&>00ff,(_50741&>ff00)/256      ; #R50741
       byte _50758&>00ff,(_50758&>ff00)/256      ; #R50758
       byte _50775&>00ff,(_50775&>ff00)/256      ; #R50775
* Door Pattern Sequences (these are cycled through)
_50724:
       byte 1,33,2,33,3,33,4,33,5,33,6,33,7,33,8,33,255              ; Door row state 1
_50741:
       byte 2,33,3,33,4,33,1,33,6,33,7,33,8,33,5,33,255              ; Door row state 2
_50758:
       byte 3,33,4,33,1,33,2,33,7,33,8,33,5,33,6,33,255              ; Door row state 3
_50775:
       byte 4,33,1,33,2,33,3,33,8,33,5,33,6,33,7,33,255              ; Door row state 4

* Graphic Layout Data Explosion (Bubo's Projectile, Fallen Drips and Firing Cannon, Level 4)
_51483:
       byte 237,4                                ; Set sound 4 (explosion) as pending
       byte 244,9                                ; Set current graphic set to 9
       byte 250,255,255                          ; Change cursor's x- and y-coordinates by -1 and -1 characters respectively
       byte 40,7,33,41,7,33
       byte 40,135,30,42,7,33
       byte 43,120,33,42,135,30
       byte 45,7,33,46,7,33
       byte 45,135,33
       byte 255                                  ; End Marker

* Boni (Mouth closed)
_50317:
       byte 244,4                                ; Set current graphic set to 4
       byte 242,7                                ; Set current attribute to 7
_50321:                                          ; For fake boni level 4
       byte 9,33,10,31
       byte 11,33,12,31
       byte 13,33,14,31
       byte 15,33,16,33
       byte 255                                  ; End Marker
* Boni (Mouth open)
_50338:
       byte 244,4                                ; Set current graphic set to 4
       byte 242,7                                ; Set current attribute to 7
       byte 1,33,2,31
       byte 3,33,4,31
       byte 5,33,6,31
       byte 7,33,8,33
       byte 255                                  ; End Marker

* Flying Skeleton Creature, animated
_51314:
       byte 244,6                                ; Set current graphic set to 6
       byte 251,_51345&>00ff,(_51345&>ff00)/256  ; Process graphic layout data at #R51345 and upon returning, move cursor to base
                                                 ; coordinates
       byte 250,5,0                              ; Change cursor's x- and y-coordinates by 0 and +5 characters respectively
       byte 2,7,33,2,135,31
       byte 247,2                                ; Jump to one of the 2 addresses in the following list, chosen at random:
       byte _51334&>00ff,(_51334&>ff00)/256      ; #R51334 (tail pointing left)
       byte _51338&>00ff,(_51338&>ff00)/256      ; #R51338 (tail pointing right)
* Tail pointing left
_51334:
       byte 3,7,33
       byte 255                                  ; End Marker
* Tail pointing right
_51338:
       byte 250,0,1                              ; Change cursor's x- and y-coordinates by +1 and 0 characters respectively
       byte 3,135,33
       byte 255                                  ; End Marker
* Upper Body & Wings, animated
_51345:
       byte 243,0,4                              ; Increase current state value n (initially 0), up to maximum of 4, resetting to zero if
                                                 ; maximum reached and jump to n-th address in following list:
       byte _51356&>00ff,(_51356&>ff00)/256      ; #R51356 (upper body and wings, frame 1)
       byte _51398&>00ff,(_51398&>ff00)/256      ; #R51398 (upper body and wings, frame 2)
       byte _51441&>00ff,(_51441&>ff00)/256      ; #R51441 (upper body and wings, frame 3)
       byte _51398&>00ff,(_51398&>ff00)/256      ; #R51398 (upper body and wings, frame 2)
* Upper Body and Wings, Frame 1
_51356:
       byte 254,1,0                              ; Change cursor's x- and y-coordinates by 0 and +1 characters respectively and store as
                                                 ; new base coordinates
       byte 251,_51380&>00ff,(_51380&>ff00)/256  ; Process graphic layout data at #R51380 and upon returning, move cursor to base
                                                 ; coordinates
       byte 242,7                                ; Set current attribute to 7
       byte 250,2,254                            ; Change cursor's x- and y-coordinates by -2 and +2 characters respectively
       byte 4,33,5,31
       byte 6,33,7,32
       byte 8,33,1,33
       byte 255                                  ; End Marker
* Right Wing and Upper-Right Body Section, Frame 1
_51380:
       byte 242,135                              ; Set current attribute to 135
       byte 250,2,2                              ; Change cursor's x- and y-coordinates by +2 and +2 characters respectively
       byte 5,33,4,31
       byte 7,33,6,30
       byte 1,33,8,33
       byte 255                                  ; End Marker
* Upper Body and Wings, Frame 2
_51398:
       byte 251,_51421&>00ff,(_51421&>ff00)/256  ; Process graphic layout data at #R51421 and upon returning, move cursor to base
                                                 ; coordinates
       byte 242,7                                ; Set current attribute to 7
       byte 250,3,254                            ; Change cursor's x- and y-coordinates by -2 and +3 characters respectively
       byte 9,33,10,30
       byte 11,33,12,33
       byte 13,33,14,29
       byte 20,33
       byte 255                                  ; End Marker
* Right Wing and Upper-Right Body Section, Frame 2
_51421:
       byte 242,135                              ; Set current attribute to 135
       byte 250,3,2                              ; Change cursor's x- and y-coordinates by +2 and +3 characters respectively
       byte 10,33,9,30
       byte 14,33,13,33
       byte 12,33,11,32
       byte 20,33
       byte 255                                  ; End Marker
* Upper Body and Wings, Frame 3
_51441:
       byte 254,255,0                            ; Change cursor's x- and y-coordinates by 0 and -1 characters respectively and store as
                                                 ; new base coordinates
       byte 251,_51465&>00ff,(_51465&>ff00)/256  ; Process graphic layout data at #R51465 and upon returning, move cursor to base
                                                 ; coordinates
       byte 242,7                                ; Set current attribute to 7
       byte 250,4,254                            ; Change cursor's x- and y-coordinates by -2 and +4 characters respectively
       byte 15,33,16,33
       byte 14,30,17,33
       byte 18,31,19,33
       byte 255                                  ; End Marker
* Right Wing and Upper-Right Body Section, Frame 3
_51465:
       byte 242,135                              ; Set current attribute to 135
       byte 250,4,1                              ; Change cursor's x- and y-coordinates by +1 and +4 characters respectively
       byte 14,33,16,33
       byte 15,31,18,33
       byte 17,32,19,33
       byte 255                                  ; End Marker

* Script Data Berk Gaining Floating Power
*
* The current position in Berk's script data is set to #R35515 both when he gains the floating power (#R36536) and
* when the Clawed Foot on Level 3 grabs Berk (#R39391). In the former case, the script instruction at #R35515 will
* be executed however in the latter case that instruction will be skipped over. Therefore, when Berk is grabbed on
* Level 3, the cycle attributes effect does not occur.
_35515:
       byte 57,0                                 ; Cycle attributes (full-screen), clear display buffers and paint red areas outside current
                                                 ; room
_35517:
       byte _59168&>00ff,(_59168&>ff00)/256      ; #R59168 (Floating / starting to fall, animated)
       byte 1,0,_35517&>00ff,(_35517&>ff00)/256  ; Jump to #R35517

