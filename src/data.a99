*********************************************************************************
clear_data_start:
       equ  $

* Index of Current Level
current_level:
       byte 1

* Game Flags
*
* #TABLE(default,centre,:w)
* { =h Bit | =h Effect }
* { 0 | Drutt Mode Flag (Set = Drutt mode / Reset = Berk mode) }
* { 1 | Characters Already Swapped Flag }
* { 2 | "Berk Has Been Killed" Flag }
* { 3 | "Reset Spiders to Initial State" Flag }
* { 4 | Level Exit Door Unlocked Flag }
* { 5 | Update Scores and Display Flag (Reset = draw timer figures / Set = calculate/update scores and display) }
* { 6 | Character Swap Pending Flag }
* { 7 | Show Score Flag (Reset = draw Timer Figures / Set = Display Score / Hi Score) }
* TABLE#
game_flags:
       byte 0

* Cannon's (Level 4) Ammunition Counter
*
* Number of shots Cannon can fire before returning to its dormant state. Increases by 10 for each drip the Cannon
* catches.
cannon_ammo_counter:
       byte 0

* Current Time / Lives
time_left:
       byte 16

* Score Data
timer_tick:
       data 0                                                        ; Timer Tick Counter / Score penalty (current level)
score_level:
       data 0                                                        ; Score (Current Level)
score_total:
       data 0                                                        ; Current Total Score

* Current Border Colour
border_color:
       byte 1

* Index of Current Character's Current Room
current_characters_room:
       byte 0

* Control Input Bitmap
* 3
* #TABLE(default,centre,:w)
* { =h Bit | =h Effect }
* { 0 | Right }
* { 1 | Left }
* { 2 | Forward (i.e. DOWN - makes Drutt swap depth levels) }
* { 3 | Back (i.e. UP - makes Drutt jump higher) }
* { 4 | Berk / Drutt }
* { 5 | Pause }
* { 6 | Restart }
* { 7 | Unused }
* TABLE#
control_input:
       byte 0

* Cached Control Input
*
* This value is set by the instruction at #R55066. It holds a value read from control input when handling
* characters' jumps.
cached_control_input:
       byte 0

* Berk's Current Power
*
* #TABLE(default,centre,:w)
* { =h Value | =h Effect }
* { 0 | None }
* { 1 | Jumping (Level 1) }
* { 2 | Jumping (Level 2) }
* { 3 | Jumping (Level 4) }
* { 4 | Flying (Level 1) }
* { 5 | Flying (Level 3, 1) }
* { 6 | Flying (Level 3, 2) }
* { 7 | Flying (Level 4, 1) }
* { 8 | Flying (Level 4, 2) }
* { 9 | Immunity to Bubo (Level 2) }
* { 10 | Floating (Level 3) }
* { 11 | Invisibility (Level 3) }
* TABLE#
berks_current_power:
       byte 0

* Interaction Data for Berk
berk_entity_held:
       byte 0                                                        ; Class of entity currently held by Berk (e.g. Drutt = 18), or zero for none
berk_coloured_creature:
       byte 0                                                        ; y-coordinate minus one for top edge of coloured creature slot with which Berk is interacting
berk_killed_by_spider:
       byte 0                                                        ; Number of times Berk has been killed by a spider on Level 1

* Remaining Duration of Berk's Current Power
*
* For each game-cycle that a power is in use, the byte at #R34224 is increased. When this reaches 16, it is reset to
* zero and the value at #R34225 is decreased by one.
       even
remaining_power_cycles:
       byte 0                                                        ; Number of elapsed game-cycles in current group of 16
remaining_power_groups:
       byte 0                                                        ; Number of groups of 16 game-cycles remaining

* Attribute of Current Character
*
* This is 1 (blue) for Berk, or 6 (yellow) for Drutt.
current_character_attr:
       byte 1

* Timer Figure Blink Duration Counter
blink_duration_counter:
       byte 0

* Data for Clawed Foot (Level 3)
*
* Location #R34229 holds the index of the action performed by Clawed Foot after it picks Berk up. This value is
* incremented when the Clawed Foot reaches the top of its vertical range of travel while carrying Berk. If the
* incremented value exceeds six, then it is reset to one. After incrementing (and resetting if appropriate), the
* value is used to determine what the Clawed Foot does with Berk:
clawed_foot_tti:
       byte 0                                                        ; Time (cycles) until Clawed Foot (Level 3) attacks
clawed_foot_action:
       byte 0                                                        ; Clawed Foot's Action Index

* Temporary Store for Room Dimension Data
*
* Contains an entry from one of the room dimension data blocks (at #R43815, #R44436, #R45116 or #R45860) for the
* current room of interest (see also #R34262).
tmp_room_dim_data:
       byte 0,0,0,0,0

* Temporary Store for Width of Entity's Current Room
*
* This location holds the width of an entity's current room (in characters, plus + 99).
tmp_width_current_room:
       byte 0

* Table of Data Addresses (Current Level)
current_data_addrs:
       data 99                                                       ; State Data for Simple Entities
cmplx_state_data_addr:
       data 99                                                       ; State Data for Complex Entities
berk_state_addr:
       data 99                                                       ; Address of Berk's state data
drutt_state_addr:
       data 99                                                       ; Address of Drutt's state data
worm_state_addr:
       data 99                                                       ; Address of worm's state data
addr_rev_col_check:
       data 99                                                       ; Start address for reverse-order collision checks
room_dim_data:
       data 99                                                       ; Room Dimension Data
horz_room_connect_map:
       data 99                                                       ; Horizontal Room Connectivity Map
unused_data_block:
       data 99                                                       ; Unused Data Block (09)
vert_room_connect_map:
       data 99                                                       ; Vertical Room Connectivity Map

* Miscellaneous Data 1
bert_interaction_state:
       data 0                                                        ; Address of complex state data for entity Berk is interacting with
coll_entity_addr:
       data 0                                                        ; Address of complex state data for entity involved in last collision check
bert_held_state:
       data 0                                                        ; Address of complex state data for entity last held by Berk
room_dim_data_addr:
       data 0                                                        ; Pointer to entry in room dimension data for an entity's room (See also data in this entry
                                                                     ; copied to #R34230)
blinking_eye_attr_addr:
       data 0                                                        ; Attribute File address of eyes of currently blinking timer figure
script_for_next_level:
       data 0                                                        ; Temporary store for script data to execute upon arrival on new level
graphic_set_index:
       byte 0                                                        ; Current Graphic Set Index
print_attr:
       byte 0                                                        ; Attribute for text printing
current_attr:
       byte 0                                                        ; Current Attribute
display_buffer_flag:
       byte 0                                                        ; "Display Buffer 2 is Primary" Flag
carried_entity_width:
       byte 0                                                        ; Width of entity carried by Berk (characters), minus 1
idx_pending_sound:
       byte 0                                                        ; Index of pending sound (used by playback routine at #R59722)
loop_counter_value_1:
       byte 0                                                        ; Store for current value of loop counter in graphic layout data processing (instructions 238
                                                                     ; and 239)
loop_counter_value_2:
       byte 0                                                        ; Store for current value of loop counter in graphic layout data processing (instructions 240
                                                                     ; and 241)

* Position (Address) in Script Data Currently Running
current_script_addr:                   ; High endian
       data 0

       even
draw_coordinates:
       byte 0                                                        ; Base y-coordinate for graphic drawing
       byte 0                                                        ; Base x-coordinate for graphic drawing

* Store for Script Instruction Loop Data
script_23_24_loop_count:
       data 0                          ; Changed from byte
script_23_24_loop_addr:
       data 1                                                        ; Repeat count and loop start address for script instructions 23 and 24
script_25_26_loop_count:
       data 0                          ; Changed from byte
script_25_26_loop_addr:
       data 1                                                        ; Repeat count and loop start address for script instructions 25 and 26
script_27_28_loop_count:
       data 0                          ; Changed from byte
script_27_28_loop_addr:
       data 1                                                        ; Repeat count and loop start address for script instructions 27 and 28

* Store for Graphic Layout Loop Data
loop_address:
       data 0                                                        ; Store for address of start of current loop in graphic layout data processing (instructions
                                                                     ; 238 and 239)
loop_start:
       data 0                                                        ; Store for address of start of current loop in graphic layout data processing (instructions
                                                                     ; 240 and 241)
clear_data_end:
       equ  $
*********************************************************************************

* Data for Drawing to Display
prim_disp_buffer_addr:
       data display_buffer_1                                         ; Start address of Primary Display Buffer

* Joystick Mode Flag
*
* #TABLE(default,centre,:w)
* { =h Value | =h Effect }
* { 0 | Joystick Mode off }
* { 1 | Joystick Mode on }
* TABLE#
;joystick_mode_flag:
;       byte 1

* Current High Score
high_score:
       data 999

* Current Keyboard Controls
current_keyboard_ctrls:
       text 'D'                                                      ; Right
       text 'S'                                                      ; Left
       text 'X'                                                      ; Forward
       text 'E'                                                      ; Back
       text 'C'                                                      ; Berk / Drutt
       text 'P'                                                      ; Pause
       text 'R'                                                      ; Restart

* Table of Attribute File Addresses for Main Menu Strings
main_menu_addrs:
       data 22666                                                    ; "S   START   "
       data 22762                                                    ; "K NEW KEYS  "
;main_menu_addrs_kempston:
       data 22851                                                    ; "J +KEMPSTON "
main_menu_addrs_dirs:
       data 22947                                                    ; "   RIGHT    "
       data 23043                                                    ; "   LEFT     "
       data 23139                                                    ; "   FORWARD  "
       data 22865                                                    ; "   BACK     "
       data 22961                                                    ; "   BERK/DRUT"
       data 23057                                                    ; "   PAUSE    "
       data 23153                                                    ; "   RESTART  "

* Table of Main Menu Strings
main_menu_strings:
       text 'S   START   '
       text '  CONTROLS  '
       text ' JOYSTICK + '
       text '   RIGHT    '
       text '   LEFT     '
       text '   FORWARD  '
       text '   BACK     '
       text '   BERK/DRUT'                                           ; (see bugs)
       text '   PAUSE    '
       text '   RESTART  '

* "THROUGH the TRAPDOOR" String
title_text:
       text 'THROUGH the TRAPDOOR'

* "SORRY BERK,  BUT YOUR TIME IS UP" String
sorry_berk_text:
       text 'SORRY BERK,  BUT YOUR TIME IS UP'

* "HOME SWEET HOME" String
home_sweet_home_text:
       text 'HOME SWEET HOME'

* Score / Total / High Score String
score_text:
       text '*SCORE#00000* TOTAL#00000* HI-SC#00999$'

* Pathfinding Data Table
*
* When built, this table has a header and a main data block. The header is three bytes long and contains the values:
pathfinding_data_table:
       byte 0,0,0
pathfinding_1st_entry:
       byte 0,0,0
       byte 0,0,0
       byte 0,0,0

* Data for Pseudo-Random Number Generator
rnd_seed:
       data 0                                                        ; Seed
;rnd_range:
;       byte 0                                                        ; Temporary store for range value

w96:
       data 96
paper_bits:
       data >3800
preserve_ink_flag:
       data >4000

*********************************************************************************

* Current Position in Berk's Script Data
berk_script_pos:
       data _35081                                                   ; Berk facing out of screen, ready to respond to control input

* Table of Addresses of Berk's Jump Script Data
berks_jump_script_data:
       data _35441                                                   ; (1) - Berk starting to jump straight up
       data _35447                                                   ; (2) - Unused
       data _35457                                                   ; (3) - Berk landing (after jump)
       data _35469                                                   ; (4) - Berk jumping left
       data _35481                                                   ; (5) - Berk jumping right
       data _35283                                                   ; (6) - Berk banging head
       data _35339                                                   ; (7) - Berk falling to the right
       data _35303                                                   ; (8) - Berk falling to the left

* Table of Berk's Reset Complex State Data Addresses
*
* Addresses of complex state data reverted to by Berk after he is "killed"
berk_reset_table:
       data berk_init_state_level_1                                                   ; Level 1
       data berk_init_state_level_2_4                                                   ; Level 2
       data berk_init_state_level_3                                                   ; Level 3
       data berk_init_state_level_2_4                                                   ; Level 4

* Berk's Reset Complex State Data
*
* Complex state data reverted to by Berk after he is "killed"
berk_init_state_level_1:
       byte 4,1,103,231,85,113,91,118,31,1,192,192,10                ; Level 1
berk_init_state_level_3:
       byte 1,1,103,231,85,107,91,112,31,1,192,192,10                ; Level 3
berk_init_state_level_2_4:
       byte 1,1,103,231,85,113,91,118,31,1,192,192,10                ; Levels 2 & 4

* Current Position in Drutt's Script Data
drutts_script_pos:
       data drutt_facing_out_script

* Table of Addresses of Script Data for Drutt's Actions
*
* When Drutt is neither under player control nor seeking a target (a worm or Berk) then his actions are determined
* by randomly selecting a script data address from this table and executing. There is:
drutts_script_data_actions:
       data _51538                                                   ; Move Drutt and any pushed entity right by a hop of size four
       data _51608                                                   ; Move Drutt and any pushed entity left by a hop of size three
       data _51630                                                   ; Drutt swapping depth levels
       data drutt_facing_out_script                                  ; Drutt facing out of screen
       data drutt_facing_out_script                                  ; Drutt facing out of screen
       data drutt_facing_out_script                                  ; Drutt facing out of screen
       data drutt_facing_out_script                                  ; Drutt facing out of screen

* Current Position in Worm's Script Data
worms_script_data_pos:
       data _52729

* Worm's Age
worms_age:
       byte 0

* Current Position in Script Data for Boni's Kidnap
boni_kidnap_script_pos:
       data boni_kidnap_script

* Current Position in Bat's Script Data
bat_script_pos:
       data bat_script

* Table of Current Positions in Spiders' Script Data
spiders_script_data_pos:
       data _37792                                                   ; Spider 1
       data _37792                                                   ; Spider 2
       data _37792                                                   ; Spider 3

* Current Position in Bubo's Script Data
bubo_script_pos:
       data _38024

* Table of Current Positions in Apebeasts' Script Data
apebeasts_script_data_pos:
       data _38432                                                   ; Apebeast 1 (Level 2)
       data _38450                                                   ; Apebeast 2 (Level 2)
       data _38432                                                   ; Apebeast 3 (Level 2)
       data _38450                                                   ; Apebeast 4 (Level 2)

* Hatch State Index (Level 3)
hatch_state_index:
       byte 0

* Table of Coloured Creatures' Properties
*
* This data is used to periodically change the identities of the three coloured creatures. Upon switching, a random
* number (i.e. a "Sequence ID") between 0 and 2 is generated. This Sequence ID is the index of the record, in the
* following table, whose data (entity class and graphic layout data address) will overwrite that of the first
* coloured creature at #R44894, as defined in the complex state data table. The second and third creatures' data
* will be likewise overwritten by the data from the following two records, respectively. As three records are always
* used, starting with the record whose index matches the generated Sequence ID, there will always be one red, one
* yellow and one white creature.
coloured_creatures_data:
       byte 13,62,157                                                ; Red Coloured Creature
       byte 14,77,157                                                ; Yellow Coloured Creature
       byte 15,92,157                                                ; White Coloured Creature
       byte 13,62,157                                                ; Red Coloured Creature
       byte 14,77,157                                                ; Yellow Coloured Creature

* Miscellaneous Data (Coloured Creatures)
coloured_creatures_curr_seq:
       byte 0                                                        ; Creatures' current Sequence ID
coloured_creatures_cycles:
       byte 0                                                        ; Cycles elapsed since last swap of creatures

* Current Position in Skeleton's Script Data
skeleton_script_pos:
       data skeleton_idling_script                                                   ; (#R41232, Skeleton Idling)

* Table of Sound Parameters
*
* #TABLE(default,centre,:w)
* { =h Offset | =h Meaning }
* { 0 | Index (unused) }
* { 1 | Outer repeat counter }
* { 2 | Inner repeat counter }
* { 3 | Delay constant (controls speed, higher value is slower) }
* { 4 | Delay constant (controls speed / pitch, higher value is slower / lower) }
* { 5 | Increment for delay constant D }
* { 6 | Increment for delay constant E }
* { 7 | Most significant byte of pseudo-random address plus No Pause Flag }
* TABLE#
;sound_table:
;       byte 1,4,168,29,167,254,3,1                                   ; (01) - Out of time
;       byte 2,3,160,57,6,1,0,128                                     ; (02) - Main Menu sound (three blips)
;       byte 3,15,141,214,46,1,253,128                                ; (03) - Unused
;       byte 4,1,40,82,59,253,1,6                                     ; (04) - Explosion
;_59666:
;       byte 5,1,84,93,115,4,251,11                                   ; (05) - Berk landing
;       byte 6,1,190,58,25,0,250,128                                  ; (06) - Berk/Drutt banging head on ceiling
;       byte 7,1,30,180,12,0,252,128                                  ; (07) - Spider sound
;       byte 8,1,134,55,58,251,4,128                                  ; (08) - Drutt eating a worm
;       byte 9,1,10,60,187,253,247,128                                ; (09) - Drutt hopping
;       byte 10,1,68,160,79,254,254,128                               ; (10) - Unused
;       byte 11,1,122,123,102,205,0,128                               ; (11) - Unused

* Table of Multiples of 96
*
* Used in calculating position in Display Buffer data for a given y-coordinate (as Display Buffer data is 3 bytes
* per character block, so 1 character row's worth of data is 3 x 32 = 96 bytes
;multiples_of_96:
;       data 0
;       data 96
;       data 192
;       data 288
;       data 384
;       data 480
;       data 576
;       data 672
;       data 768
;       data 864
;       data 960
;       data 1056
;       data 1152
;       data 1248
;       data 1344
;       data 1440
;       data 1536
;       data 1632
;       data 1728
;       data 1824
;       data 1920
;       data 2016
;       data 2112
;       data 2208

* Display Buffer 1
*
* Three bytes per entry, 32 x 22 entries, one for each cell of Attribute File within play area. Bytes are in order:
*
display_buffer_1:
       bss 32*22*3

* Display Buffer 2
*
* Three bytes per entry, 32 x 22 entries, one for each cell of Attribute File within play area. Bytes are in order:
*
display_buffer_2:
       bss 32*22*3


